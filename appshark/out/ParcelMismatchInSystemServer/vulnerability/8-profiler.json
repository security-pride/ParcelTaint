{
    "ProcessMethodStatistics": {
        "availableMethods": 94411,
        "availableClasses": 13224,
        "DirectCallGraph": 81330,
        "HeirCallGraph": 81330,
        "DirectReverseCallGraph": 97431,
        "HeirReverseCallGraph": 104539
    },
    "totalRange": {
        "startTime": "2025-06-10 21:20:04 220",
        "takes": 120868
    },
    "fragments": {
    },
    "stage": "ProfilerTask count=0",
    "parseApk": {
        "startTime": "2025-06-10 21:20:07 314",
        "takes": 68
    },
    "preProcessor": {
        "startTime": "2025-06-10 21:20:07 382",
        "takes": 23783
    },
    "ruleAnalyzerCount": {
        "ParcelMismatchInSystemServer": 260
    },
    "checkAndParseMethodSigInternalUse": 19,
    "taintAnalyzerCount": 260,
    "twoStagePointerAnalyzeCount": 260,
    "ptrLocalCount": 820044,
    "ptrStaticFieldCount": 4084,
    "ptrObjectFieldCount": 4976349,
    "objectCount": 149346,
    "pointAnalyze": {
        "<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void onPrintJobQueued(android.print.PrintJobInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 431",
            "takes": 1787
        },
        "<com.android.server.content.ContentService: void putCache(java.lang.String,android.net.Uri,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 1452
        },
        "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 2418
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void sendCustomAction(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 1832
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportNetworkEvent(java.lang.String,android.media.metrics.NetworkEvent,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 1831
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void sendCommand(java.lang.String,java.lang.String,android.os.Bundle,android.os.ResultReceiver)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 970
        },
        "<com.android.server.media.MediaRouterService: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1304
        },
        "<com.android.server.am.ActivityManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434"
        },
        "<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1798
        },
        "<com.android.server.timedetector.TimeDetectorService: boolean updateConfiguration(android.app.time.TimeConfiguration)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1826
        },
        "<com.android.server.clipboard.ClipboardService$ClipboardImpl: void setPrimaryClipAsPackage(android.content.ClipData,java.lang.String,java.lang.String,int,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1777
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void resumeRecording(android.os.IBinder,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 1751
        },
        "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 2176
        },
        "<com.android.server.media.MediaRoute2ProviderServiceProxy$ServiceCallbackStub: void notifySessionCreated(long,android.media.RoutingSessionInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1823
        },
        "<com.android.server.notification.NotificationManagerService$11: void createConversationNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 2292
        },
        "<com.android.server.am.ActivityManagerService: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.appop.AppOpsService: void setUserRestrictions(android.os.Bundle,android.os.IBinder,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1792
        },
        "<com.android.server.content.ContentService: void cancelRequest(android.content.SyncRequest)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 436"
        },
        "<com.android.server.content.ContentService: void sync(android.content.SyncRequest,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 439"
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432"
        },
        "<com.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub: void createSmartspaceSession(android.app.smartspace.SmartspaceConfig,android.app.smartspace.SmartspaceSessionId,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1759
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean showSessionFromSession(android.os.IBinder,android.os.Bundle,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 1826
        },
        "<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 903
        },
        "<com.android.server.accounts.AccountManagerService: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 2288
        },
        "<com.android.server.wm.ActivityClientController: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432",
            "takes": 2770
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int,java.lang.String,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 926
        },
        "<com.android.server.accounts.AccountManagerService: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 2075
        },
        "<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,int,boolean,android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 1758
        },
        "<com.android.server.content.ContentService: void syncAsUser(android.content.SyncRequest,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 432"
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean showSessionForActiveService(android.os.Bundle,int,java.lang.String,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 1769
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivities(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434"
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 11975
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onTimeShiftCommandRequest(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 63
        },
        "<com.android.server.audio.AudioService: int clearPreferredMixerAttributes(android.media.AudioAttributes,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 1750
        },
        "<com.android.server.media.MediaRouterService: void transferToRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 98
        },
        "<com.android.server.content.ContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434"
        },
        "<com.android.server.wm.ActivityClientController: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 436",
            "takes": 1753
        },
        "<com.android.server.backup.BackupManagerService: void updateTransportAttributesForUser(int,android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1793
        },
        "<com.android.server.media.MediaRouterService: void requestCreateSessionWithRouter2(android.media.IMediaRouter2,int,long,android.media.RoutingSessionInfo,android.media.MediaRoute2Info,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 906
        },
        "<com.android.server.accounts.AccountManagerService: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 2142
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void showAppDetailsAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 913
        },
        "<com.android.server.am.ActivityManagerService: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.audio.AudioService: long getFadeOutDurationOnFocusLossMillis(android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1325
        },
        "<com.android.server.am.ActivityManagerService: int startActivityFromRecents(int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 2159
        },
        "<com.android.server.autofill.RemoteAugmentedAutofillService$1$1: void onSuccess(java.util.List,android.os.Bundle,boolean)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1816
        },
        "<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerSessionStub: int startRecognitionForService(android.os.ParcelUuid,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 822
        },
        "<com.android.server.am.ActivityManagerService: void moveTaskToFront(android.app.IApplicationThread,java.lang.String,int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.wm.ActivityTaskManagerService: void startRecentsActivity(android.content.Intent,long,android.view.IRecentsAnimationRunner)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435"
        },
        "<com.android.server.audio.AudioService: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 939
        },
        "<com.android.server.audio.AudioService: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1836
        },
        "<com.android.server.security.AttestationVerificationManagerService$1: void verifyAttestation(android.security.attestationverification.AttestationProfile,int,android.os.Bundle,byte[],com.android.internal.infra.AndroidFuture)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1820
        },
        "<com.android.server.audio.AudioService: int getFocusRampTimeMs(int,android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1038
        },
        "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1791
        },
        "<com.android.server.om.OverlayManagerService$1: void commit(android.content.om.OverlayManagerTransaction)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 2268
        },
        "<com.android.server.wm.ActivityClientController: boolean navigateUpTo(android.os.IBinder,android.content.Intent,java.lang.String,int,android.content.Intent)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434"
        },
        "<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHdmiInput(int,android.media.tv.TvInputInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1807
        },
        "<com.android.server.am.ActivityManagerService: int broadcastIntentWithFeature(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],java.lang.String[],java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackErrorEvent(java.lang.String,android.media.metrics.PlaybackErrorEvent,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1800
        },
        "<com.android.server.tv.TvInputManagerService$SessionCallback: void onSessionEvent(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 428
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void updateTransferredNetworkBytes(int,android.app.job.JobWorkItem,long,long)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 807
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void classifyContentSelections(int,android.app.contentsuggestions.ClassificationsRequest,android.app.contentsuggestions.IClassificationsCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 806
        },
        "<com.android.server.accounts.AccountManagerService: void startAddAccountSession(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 2126
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void pauseRecording(android.os.IBinder,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1751
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 744
        },
        "<com.android.server.wallpaper.WallpaperManagerService: void notifyWakingUp(int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1800
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1820
        },
        "<com.android.server.am.ActivityManagerService: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1119
        },
        "<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,boolean,java.lang.String,java.lang.String,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.midi.MidiService: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 438",
            "takes": 1757
        },
        "<com.android.server.audio.AudioService: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1785
        },
        "<com.android.server.audio.AudioService: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1811
        },
        "<com.android.server.search.SearchManagerService: void launchAssist(int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1812
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1007
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int scheduleAsPackage(java.lang.String,android.app.job.JobInfo,java.lang.String,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 11405
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void requestAd(android.os.IBinder,android.media.tv.AdRequest,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1753
        },
        "<com.android.server.notification.NotificationManagerService$11: void applyAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 2588
        },
        "<com.android.server.notification.NotificationManagerService$11: boolean matchesCallFilter(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1781
        },
        "<com.android.server.audio.AudioService: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1819
        },
        "<com.android.server.audio.AudioService: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 438",
            "takes": 1825
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void suggestContentSelections(int,android.app.contentsuggestions.SelectionsRequest,android.app.contentsuggestions.ISelectionsCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 430
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void provideContextImage(int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1744
        },
        "<com.android.server.wm.Session: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1808
        },
        "<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,long,java.lang.String,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.app.IApplicationThread,android.os.IBinder,android.app.IServiceConnection,long)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1812
        },
        "<com.android.server.compat.PlatformCompat: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1212
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int startVoiceActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1838
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startAssistantActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.BinaryTransparencyService$BinaryTransparencyServiceImpl: java.util.List collectAllUpdatedPreloadInfo(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 98
        },
        "<com.android.server.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 438",
            "takes": 2117
        },
        "<com.android.server.wm.WindowManagerService: void addWindowToken(android.os.IBinder,int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 438"
        },
        "<com.android.server.media.MediaRouterService: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1810
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1247
        },
        "<com.android.server.audio.AudioService: int setPreferredMixerAttributes(android.media.AudioAttributes,int,android.media.AudioMixerAttributes)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1834
        },
        "<com.android.server.audio.AudioService: boolean canBeSpatialized(android.media.AudioAttributes,android.media.AudioFormat)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1761
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int schedule(java.lang.String,android.app.job.JobInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 11561
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void setNotification(int,int,android.app.Notification,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1819
        },
        "<com.android.server.statusbar.StatusBarManagerService: void onNotificationActionClick(java.lang.String,int,android.app.Notification$Action,com.android.internal.statusbar.NotificationVisibility,boolean)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 92
        },
        "<com.android.server.am.ActivityManagerService: int startActivityAsUserWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435"
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void tune(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1809
        },
        "<com.android.server.audio.AudioService: android.media.VolumeInfo getDeviceVolume(android.media.VolumeInfo,android.media.AudioDeviceAttributes,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 93
        },
        "<com.android.server.timezonedetector.TimeZoneDetectorService: boolean updateConfiguration(android.app.time.TimeZoneConfiguration)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1310
        },
        "<com.android.server.am.ActivityManagerService: int bindServiceInstance(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,long,java.lang.String,java.lang.String,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void updateEstimatedNetworkBytes(int,android.app.job.JobWorkItem,long,long)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1484
        },
        "<com.android.server.media.MediaRouterService: void deselectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 438",
            "takes": 1751
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void notifyError(android.os.IBinder,java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1705
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void notifyTvMessage(android.os.IBinder,int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 439",
            "takes": 1831
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1308
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setUiHints(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1713
        },
        "<com.android.server.am.ActivityManagerService: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.media.MediaRoute2ProviderServiceProxy$ServiceCallbackStub: void notifySessionReleased(android.media.RoutingSessionInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1417
        },
        "<com.android.server.input.InputManagerService: java.lang.String getKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1761
        },
        "<com.android.server.audio.AudioService: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean,boolean,boolean,android.media.projection.IMediaProjection)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1770
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$3: void onSetUiHints(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1827
        },
        "<com.android.server.wm.ActivityClientController: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 688
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean startDreamActivity(android.content.Intent)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.app.IApplicationThread,android.os.IBinder,android.content.Intent,android.app.IServiceConnection,long,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 2724
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean isActivityStartAllowedOnDisplay(int,android.content.Intent,java.lang.String,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1774
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean requestAssistContextExtras(int,android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1803
        },
        "<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,boolean,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433"
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onRequestScheduleRecording(java.lang.String,java.lang.String,android.net.Uri,android.net.Uri,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 1836
        },
        "<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1052
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setExtras(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1099
        },
        "<com.android.server.media.MediaRouterService: void deselectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 435",
            "takes": 111
        },
        "<com.android.server.compat.PlatformCompat: void reportChange(long,android.content.pm.ApplicationInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 434",
            "takes": 1832
        },
        "<com.android.server.security.AttestationVerificationManagerService$1: void verifyToken(android.security.attestationverification.VerificationToken,android.os.ParcelDuration,com.android.internal.infra.AndroidFuture)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1826
        },
        "<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 433",
            "takes": 1745
        },
        "<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUserByIntent(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,int,android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 438",
            "takes": 1749
        },
        "<com.android.server.wm.ActivityClientController: boolean convertToTranslucent(android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 439"
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executeGetCredential(android.credentials.GetCredentialRequest,android.credentials.IGetCredentialCallback,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 439",
            "takes": 2083
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onCommandRequest(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 439",
            "takes": 1780
        },
        "<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 439",
            "takes": 1829
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 439",
            "takes": 1836
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executeCreateCredential(android.credentials.CreateCredentialRequest,android.credentials.ICreateCredentialCallback,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 439",
            "takes": 1786
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.app.PendingIntent getShortcutIntent(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,android.os.UserHandle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 442",
            "takes": 1816
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 445"
        },
        "<com.android.server.audio.AudioService: int requestAudioFocusForTest(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,int,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 445",
            "takes": 1787
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setPlaybackState(android.media.session.PlaybackState)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 446",
            "takes": 1013
        },
        "<com.android.server.am.ActivityManagerService: void crashApplicationWithTypeWithExtras(int,int,java.lang.String,int,java.lang.String,boolean,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 446"
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void createBiInteractiveApp(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 447",
            "takes": 1787
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int,boolean)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 447",
            "takes": 1006
        },
        "<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHardwareInput(int,android.media.tv.TvInputInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 448",
            "takes": 1783
        },
        "<com.android.server.audio.AudioService: void playerAttributes(int,android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 448",
            "takes": 1686
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 449",
            "takes": 1791
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void notifyTvMessage(android.os.IBinder,int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 449",
            "takes": 1810
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 450",
            "takes": 1913
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivityFromRecents(int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 451"
        },
        "<com.android.server.textservices.TextServicesManagerService: void getSpellCheckerService(int,java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 452",
            "takes": 1741
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean startShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 453",
            "takes": 1783
        },
        "<com.android.server.am.ActivityManagerService: void addInstrumentationResults(android.app.IApplicationThread,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 453",
            "takes": 1733
        },
        "<com.android.server.audio.AudioService: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 454",
            "takes": 1644
        },
        "<com.android.server.content.ContentService: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 455"
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void performDirectAction(android.os.IBinder,java.lang.String,android.os.Bundle,int,android.os.IBinder,android.os.RemoteCallback,android.os.RemoteCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 456",
            "takes": 1718
        },
        "<com.android.server.audio.AudioService: java.util.List getDevicesForAttributesUnprotected(android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 457",
            "takes": 1780
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setMetadata(android.media.MediaMetadata,long,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 458",
            "takes": 1779
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 460"
        },
        "<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void setAuthenticationResult(android.os.Bundle,int,int,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 461",
            "takes": 9914
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetOptions(java.lang.String,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 461",
            "takes": 2098
        },
        "<com.android.server.notification.NotificationManagerService$11: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 464",
            "takes": 4279
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 471",
            "takes": 1768
        },
        "<com.android.server.wm.ActivityTaskManagerService: void moveTaskToFront(android.app.IApplicationThread,java.lang.String,int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 472"
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 474",
            "takes": 1765
        },
        "<com.android.server.MmsServiceBroker$BinderService: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent,long,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 491",
            "takes": 1177
        },
        "<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 474",
            "takes": 1144
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onRequestScheduleRecording2(java.lang.String,java.lang.String,android.net.Uri,long,long,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 475",
            "takes": 1764
        },
        "<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayoutListForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 476",
            "takes": 1721
        },
        "<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void setUserData(android.service.autofill.UserData)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 478",
            "takes": 1769
        },
        "<com.android.server.wm.AppTaskImpl: int startActivity(android.os.IBinder,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 479"
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int startAssistantActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 479",
            "takes": 1760
        },
        "<com.android.server.input.InputManagerService: void setKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 481",
            "takes": 1730
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startVoiceActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 482"
        },
        "<com.android.server.statusbar.StatusBarManagerService: void updateMediaTapToTransferSenderDisplay(int,android.media.MediaRoute2Info,com.android.internal.statusbar.IUndoMediaTransferCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 482",
            "takes": 1758
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 492"
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void provideContextBitmap(int,android.graphics.Bitmap,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 493",
            "takes": 1748
        },
        "<com.android.server.wm.ActivityTaskManagerService: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 494"
        },
        "<com.android.server.accounts.AccountManagerService: void finishSessionAsUser(android.accounts.IAccountManagerResponse,android.os.Bundle,boolean,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 494",
            "takes": 2083
        },
        "<com.android.server.wm.ActivityTaskManagerService: android.app.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 494"
        },
        "<com.android.server.compat.PlatformCompat: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 495",
            "takes": 1242
        },
        "<com.android.server.audio.AudioService: void addOnDevicesForAttributesChangedListener(android.media.AudioAttributes,android.media.IDevicesForAttributesCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 497",
            "takes": 1673
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackMetrics(java.lang.String,android.media.metrics.PlaybackMetrics,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 498",
            "takes": 1222
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean requestAutofillData(android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 506",
            "takes": 1736
        },
        "<com.android.server.wm.WindowManagerService: android.content.res.Configuration attachWindowContextToDisplayArea(android.os.IBinder,int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 508"
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void startRecording(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 509",
            "takes": 1753
        },
        "<com.android.server.am.ActivityManagerService: void unbindBackupAgent(android.content.pm.ApplicationInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 514"
        },
        "<com.android.server.MmsServiceBroker$BinderService: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent,long,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 516",
            "takes": 1727
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setPlaybackToLocal(android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 518",
            "takes": 1745
        },
        "<com.android.server.media.MediaRouterService: void selectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 522",
            "takes": 1407
        },
        "<com.android.server.audio.AudioService: boolean sendFocusLoss(android.media.AudioFocusInfo,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 528",
            "takes": 1658
        },
        "<com.android.server.wm.Session: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 530",
            "takes": 1355
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean bindAppWidgetId(java.lang.String,int,int,android.content.ComponentName,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 530",
            "takes": 2120
        },
        "<com.android.server.wallpaper.WallpaperManagerService: void notifyGoingToSleep(int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 530",
            "takes": 1714
        },
        "<com.android.server.BinaryTransparencyService$BinaryTransparencyServiceImpl: java.util.List collectAllSilentInstalledMbaInfo(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 534",
            "takes": 1661
        },
        "<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 536"
        },
        "<com.android.server.tv.TvInputManagerService$SessionCallback: void onTvMessage(int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 537",
            "takes": 1465
        },
        "<com.android.server.location.provider.proxy.ProxyLocationProvider$Proxy: void onReportLocation(android.location.Location)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 540",
            "takes": 1571
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackStateEvent(java.lang.String,android.media.metrics.PlaybackStateEvent,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 544",
            "takes": 1736
        },
        "<com.android.server.media.MediaSessionService$SessionManagerImpl: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 549",
            "takes": 1860
        },
        "<com.android.server.wm.Session: android.os.IBinder performDrag(android.view.IWindow,int,android.view.SurfaceControl,int,float,float,float,float,android.content.ClipData)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 549"
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onAdRequest(android.media.tv.AdRequest)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 552",
            "takes": 1577
        },
        "<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void onPrintJobStateChanged(android.print.PrintJobInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 555",
            "takes": 1615
        },
        "<com.android.server.media.MediaRouterService: void selectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 556",
            "takes": 1708
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void query(android.app.search.SearchSessionId,android.app.search.Query,android.app.search.ISearchCallback)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 559",
            "takes": 1573
        },
        "<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 563"
        },
        "<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.inputmethod.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.inputmethod.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.inputmethod.IRemoteInputConnection,com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,int,int,android.window.ImeOnBackInvokedDispatcher)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 571",
            "takes": 4015
        },
        "<com.android.server.wm.ActivityClientController: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 574"
        },
        "<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 574",
            "takes": 1723
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void sendTvInputNotifyIntent(android.content.Intent,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 580",
            "takes": 1694
        },
        "<com.android.server.am.ActivityManagerService: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 582"
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int enqueue(java.lang.String,android.app.job.JobInfo,android.app.job.JobWorkItem)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 583",
            "takes": 11242
        },
        "<com.android.server.media.MediaRouterService: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 584",
            "takes": 1597
        },
        "<com.android.server.location.LocationManagerService: void injectLocation(android.location.Location)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 589",
            "takes": 1778
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportTrackChangeEvent(java.lang.String,android.media.metrics.TrackChangeEvent,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 590",
            "takes": 1594
        },
        "<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 603",
            "takes": 1645
        },
        "<com.android.server.content.ContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 607"
        },
        "<com.android.server.am.ActivityManagerService: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 614"
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 616",
            "takes": 1574
        },
        "<com.android.server.pm.permission.PermissionManagerService: boolean addPermission(android.content.pm.PermissionInfo,boolean)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 618",
            "takes": 1631
        },
        "<com.android.server.MmsServiceBroker$BinderService: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 621",
            "takes": 1570
        },
        "<com.android.server.clipboard.ClipboardService$ClipboardImpl: void setPrimaryClip(android.content.ClipData,java.lang.String,java.lang.String,int,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 623",
            "takes": 1598
        },
        "<com.android.server.media.MediaRouterService: void requestCreateSessionWithManager(android.media.IMediaRouter2Manager,int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 624",
            "takes": 1625
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal clearCredentialState(android.credentials.ClearCredentialStateRequest,android.credentials.IClearCredentialStateCallback,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 640",
            "takes": 1635
        },
        "<com.android.server.location.LocationManagerService: void sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 666",
            "takes": 1584
        },
        "<com.android.server.audio.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 669",
            "takes": 1609
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void createSearchSession(android.app.search.SearchContext,android.app.search.SearchSessionId,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 702",
            "takes": 1548
        },
        "<com.android.server.accounts.AccountManagerService: void startUpdateCredentialsSession(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 711",
            "takes": 2008
        },
        "<com.android.server.wm.Session: int relayout(android.view.IWindow,android.view.WindowManager$LayoutParams,int,int,int,int,int,int,android.window.ClientWindowFrames,android.util.MergedConfiguration,android.view.SurfaceControl,android.view.InsetsState,android.view.InsetsSourceControl$Array,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 731"
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void sendEvent(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 752",
            "takes": 1446
        },
        "<com.android.server.wm.ActivityTaskManagerService: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 782",
            "takes": 1468
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void showSession(android.os.Bundle,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 792",
            "takes": 1497
        },
        "<com.android.server.musicrecognition.MusicRecognitionManagerPerUserService$MusicRecognitionServiceCallback: void onRecognitionSucceeded(android.media.MediaMetadata,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 800",
            "takes": 1451
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void sendAppPrivateCommand(android.os.IBinder,java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 833",
            "takes": 1418
        },
        "<com.android.server.audio.AudioService: void setDeviceVolume(android.media.VolumeInfo,android.media.AudioDeviceAttributes,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 835",
            "takes": 1635
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 862",
            "takes": 1340
        },
        "<com.android.server.media.MediaRouterService: void transferToRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 882",
            "takes": 1370
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void sendAppLinkCommand(java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 892",
            "takes": 1360
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 893",
            "takes": 1308
        },
        "<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 918"
        },
        "<com.android.server.pm.UserManagerService: void setDefaultGuestRestrictions(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 106",
            "takes": 1199
        },
        "<com.android.server.audio.AudioService: int abandonAudioFocusForTest(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 123",
            "takes": 1102
        },
        "<com.android.server.location.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String,java.lang.String)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 142",
            "takes": 1072
        },
        "<com.android.server.pm.UserManagerService: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 159",
            "takes": 1108
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void notifyInteraction(int,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 161",
            "takes": 1093
        },
        "<com.android.server.notification.NotificationManagerService$11: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 166",
            "takes": 10126
        },
        "<com.android.server.notification.NotificationManagerService$11: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 167",
            "takes": 4623
        },
        "<com.android.server.midi.MidiService: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 181",
            "takes": 1074
        },
        "<com.android.server.am.ActivityManagerService: int startActivityWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 220"
        },
        "<com.android.server.statusbar.StatusBarManagerService: void updateMediaTapToTransferReceiverDisplay(int,android.media.MediaRoute2Info,android.graphics.drawable.Icon,java.lang.CharSequence)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 235",
            "takes": 988
        },
        "<com.android.server.appprediction.AppPredictionManagerService$PredictionManagerServiceStub: void createPredictionSession(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 236",
            "takes": 1033
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 253",
            "takes": 975
        },
        "<com.android.server.notification.NotificationManagerService$11: void applyEnqueuedAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 265",
            "takes": 2162
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivityFromGameSession(android.app.IApplicationThread,java.lang.String,java.lang.String,int,int,android.content.Intent,int,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 299"
        },
        "<com.android.server.statusbar.StatusBarManagerService: void onNotificationFeedbackReceived(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 300",
            "takes": 957
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void notifyEvent(android.app.search.SearchSessionId,android.app.search.Query,android.app.search.SearchTargetEvent)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:32 328",
            "takes": 930
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean requestPinAppWidget(java.lang.String,android.content.ComponentName,android.os.Bundle,android.content.IntentSender)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 534",
            "takes": 1949
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void updateTvInputInfo(android.media.tv.TvInputInfo,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 536",
            "takes": 1713
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 537",
            "takes": 2245
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>- ParcelMismatchInSystemServer": {
            "startTime": "2025-06-10 21:20:31 538",
            "takes": 1884
        }
    },
    "taintPathCalc": {
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void showAppDetailsAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>": {
            "startTime": "2025-06-10 21:20:32 346",
            "takes": 2
        },
        "<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 207",
            "takes": 6
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int enqueue(java.lang.String,android.app.job.JobInfo,android.app.job.JobWorkItem)>": {
            "startTime": "2025-06-10 21:20:42 825",
            "takes": 9
        },
        "<com.android.server.audio.AudioService: void addOnDevicesForAttributesChangedListener(android.media.AudioAttributes,android.media.IDevicesForAttributesCallback)>": {
            "startTime": "2025-06-10 21:20:33 170",
            "takes": 11
        },
        "<com.android.server.audio.AudioService: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>": {
            "startTime": "2025-06-10 21:20:33 270",
            "takes": 42
        },
        "<com.android.server.appprediction.AppPredictionManagerService$PredictionManagerServiceStub: void createPredictionSession(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId,android.os.IBinder)>": {
            "startTime": "2025-06-10 21:20:33 288",
            "takes": 69
        },
        "<com.android.server.media.MediaRouterService: void deselectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>": {
            "startTime": "2025-06-10 21:20:33 189",
            "takes": 21
        },
        "<com.android.server.wm.Session: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 241",
            "takes": 23
        },
        "<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:32 336",
            "takes": 2
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void sendCustomAction(java.lang.String,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 290",
            "takes": 37
        },
        "<com.android.server.audio.AudioService: void setDeviceVolume(android.media.VolumeInfo,android.media.AudioDeviceAttributes,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 471",
            "takes": 6
        },
        "<com.android.server.compat.PlatformCompat: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>": {
            "startTime": "2025-06-10 21:20:32 740",
            "takes": 3
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void classifyContentSelections(int,android.app.contentsuggestions.ClassificationsRequest,android.app.contentsuggestions.IClassificationsCallback)>": {
            "startTime": "2025-06-10 21:20:32 240",
            "takes": 12
        },
        "<com.android.server.search.SearchManagerService: void launchAssist(int,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 251",
            "takes": 9
        },
        "<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void setAuthenticationResult(android.os.Bundle,int,int,int)>": {
            "startTime": "2025-06-10 21:20:41 376",
            "takes": 14
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:32 440",
            "takes": 3
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onAdRequest(android.media.tv.AdRequest)>": {
            "startTime": "2025-06-10 21:20:33 129",
            "takes": 4
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void notifyTvMessage(android.os.IBinder,int,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 290",
            "takes": 20
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportNetworkEvent(java.lang.String,android.media.metrics.NetworkEvent,int)>": {
            "startTime": "2025-06-10 21:20:33 286",
            "takes": 29
        },
        "<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 179",
            "takes": 3
        },
        "<com.android.server.location.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 215",
            "takes": 3
        },
        "<com.android.server.audio.AudioService: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>": {
            "startTime": "2025-06-10 21:20:33 220",
            "takes": 4
        },
        "<com.android.server.pm.permission.PermissionManagerService: boolean addPermission(android.content.pm.PermissionInfo,boolean)>": {
            "startTime": "2025-06-10 21:20:33 258",
            "takes": 60
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void sendTvInputNotifyIntent(android.content.Intent,int)>": {
            "startTime": "2025-06-10 21:20:33 289",
            "takes": 44
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean showSessionFromSession(android.os.IBinder,android.os.Bundle,int,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 275",
            "takes": 440
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>": {
            "startTime": "2025-06-10 21:20:33 240",
            "takes": 29
        },
        "<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:32 618",
            "takes": 3
        },
        "<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,int,boolean,android.os.IBinder,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 193",
            "takes": 16
        },
        "<com.android.server.MmsServiceBroker$BinderService: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent,long,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 248",
            "takes": 49
        },
        "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 851",
            "takes": 10
        },
        "<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayoutListForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>": {
            "startTime": "2025-06-10 21:20:33 197",
            "takes": 14
        },
        "<com.android.server.media.MediaRouterService: void requestCreateSessionWithRouter2(android.media.IMediaRouter2,int,long,android.media.RoutingSessionInfo,android.media.MediaRoute2Info,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:32 339",
            "takes": 2
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void updateTransferredNetworkBytes(int,android.app.job.JobWorkItem,long,long)>": {
            "startTime": "2025-06-10 21:20:32 241",
            "takes": 12
        },
        "<com.android.server.media.MediaRouterService: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)>": {
            "startTime": "2025-06-10 21:20:33 248",
            "takes": 21
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean requestPinAppWidget(java.lang.String,android.content.ComponentName,android.os.Bundle,android.content.IntentSender)>": {
            "startTime": "2025-06-10 21:20:33 483",
            "takes": 6
        },
        "<com.android.server.am.ActivityManagerService: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:32 555",
            "takes": 3
        },
        "<com.android.server.wm.ActivityClientController: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:32 121",
            "takes": 2
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void sendAppLinkCommand(java.lang.String,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 267",
            "takes": 38
        },
        "<com.android.server.statusbar.StatusBarManagerService: void updateMediaTapToTransferReceiverDisplay(int,android.media.MediaRoute2Info,android.graphics.drawable.Icon,java.lang.CharSequence)>": {
            "startTime": "2025-06-10 21:20:33 223",
            "takes": 4
        },
        "<com.android.server.notification.NotificationManagerService$11: void applyEnqueuedAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>": {
            "startTime": "2025-06-10 21:20:34 427",
            "takes": 33
        },
        "<com.android.server.notification.NotificationManagerService$11: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)>": {
            "startTime": "2025-06-10 21:20:35 745",
            "takes": 154
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 202",
            "takes": 4
        },
        "<com.android.server.input.InputManagerService: java.lang.String getKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>": {
            "startTime": "2025-06-10 21:20:33 194",
            "takes": 16
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void suggestContentSelections(int,android.app.contentsuggestions.SelectionsRequest,android.app.contentsuggestions.ISelectionsCallback)>": {
            "startTime": "2025-06-10 21:20:31 890",
            "takes": 2
        },
        "<com.android.server.location.provider.proxy.ProxyLocationProvider$Proxy: void onReportLocation(android.location.Location)>": {
            "startTime": "2025-06-10 21:20:33 111",
            "takes": 3
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 290",
            "takes": 41
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setMetadata(android.media.MediaMetadata,long,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 239",
            "takes": 31
        },
        "<com.android.server.pm.UserManagerService: void setDefaultGuestRestrictions(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 306",
            "takes": 28
        },
        "<com.android.server.accounts.AccountManagerService: void finishSessionAsUser(android.accounts.IAccountManagerResponse,android.os.Bundle,boolean,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 577",
            "takes": 9
        },
        "<com.android.server.audio.AudioService: java.util.List getDevicesForAttributesUnprotected(android.media.AudioAttributes)>": {
            "startTime": "2025-06-10 21:20:33 239",
            "takes": 11
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setExtras(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:32 533",
            "takes": 2
        },
        "<com.android.server.wm.Session: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>": {
            "startTime": "2025-06-10 21:20:32 885",
            "takes": 3
        },
        "<com.android.server.tv.TvInputManagerService$SessionCallback: void onTvMessage(int,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 2",
            "takes": 2
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 239",
            "takes": 14
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:32 680",
            "takes": 2
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void startRecording(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 282",
            "takes": 16
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>": {
            "startTime": "2025-06-10 21:20:33 782",
            "takes": 5
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void provideContextBitmap(int,android.graphics.Bitmap,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 241",
            "takes": 27
        },
        "<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.inputmethod.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.inputmethod.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.inputmethod.IRemoteInputConnection,com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,int,int,android.window.ImeOnBackInvokedDispatcher)>": {
            "startTime": "2025-06-10 21:20:35 586",
            "takes": 27
        },
        "<com.android.server.media.MediaRouterService: void deselectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>": {
            "startTime": "2025-06-10 21:20:31 547",
            "takes": 7
        },
        "<com.android.server.appop.AppOpsService: void setUserRestrictions(android.os.Bundle,android.os.IBinder,int)>": {
            "startTime": "2025-06-10 21:20:33 225",
            "takes": 6
        },
        "<com.android.server.accounts.AccountManagerService: void startUpdateCredentialsSession(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 719",
            "takes": 3
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void performDirectAction(android.os.IBinder,java.lang.String,android.os.Bundle,int,android.os.IBinder,android.os.RemoteCallback,android.os.RemoteCallback)>": {
            "startTime": "2025-06-10 21:20:33 174",
            "takes": 4
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean bindAppWidgetId(java.lang.String,int,int,android.content.ComponentName,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 651",
            "takes": 6
        },
        "<com.android.server.security.AttestationVerificationManagerService$1: void verifyToken(android.security.attestationverification.VerificationToken,android.os.ParcelDuration,com.android.internal.infra.AndroidFuture)>": {
            "startTime": "2025-06-10 21:20:33 279",
            "takes": 28
        },
        "<com.android.server.media.MediaSessionService$SessionManagerImpl: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 410",
            "takes": 3
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean showSessionForActiveService(android.os.Bundle,int,java.lang.String,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>": {
            "startTime": "2025-06-10 21:20:33 203",
            "takes": 518
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int startAssistantActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 240",
            "takes": 22
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean requestAssistContextExtras(int,android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>": {
            "startTime": "2025-06-10 21:20:33 237",
            "takes": 23
        },
        "<com.android.server.timezonedetector.TimeZoneDetectorService: boolean updateConfiguration(android.app.time.TimeZoneConfiguration)>": {
            "startTime": "2025-06-10 21:20:32 747",
            "takes": 2
        },
        "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 609",
            "takes": 1
        },
        "<com.android.server.wm.ActivityClientController: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 190",
            "takes": 14
        },
        "<com.android.server.timedetector.TimeDetectorService: boolean updateConfiguration(android.app.time.TimeConfiguration)>": {
            "startTime": "2025-06-10 21:20:33 280",
            "takes": 47
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void createBiInteractiveApp(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 234",
            "takes": 9
        },
        "<com.android.server.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 555",
            "takes": 5
        },
        "<com.android.server.wallpaper.WallpaperManagerService: void notifyGoingToSleep(int,int,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 249",
            "takes": 51
        },
        "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 225",
            "takes": 5
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onRequestScheduleRecording(java.lang.String,java.lang.String,android.net.Uri,android.net.Uri,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 290",
            "takes": 43
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void setNotification(int,int,android.app.Notification,int)>": {
            "startTime": "2025-06-10 21:20:33 269",
            "takes": 62
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void sendEvent(java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 198",
            "takes": 14
        },
        "<com.android.server.notification.NotificationManagerService$11: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)>": {
            "startTime": "2025-06-10 21:20:36 790",
            "takes": 3
        },
        "<com.android.server.audio.AudioService: boolean sendFocusLoss(android.media.AudioFocusInfo,android.media.audiopolicy.IAudioPolicyCallback)>": {
            "startTime": "2025-06-10 21:20:33 187",
            "takes": 9
        },
        "<com.android.server.audio.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 291",
            "takes": 33
        },
        "<com.android.server.audio.AudioService: int clearPreferredMixerAttributes(android.media.AudioAttributes,int)>": {
            "startTime": "2025-06-10 21:20:33 186",
            "takes": 16
        },
        "<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHardwareInput(int,android.media.tv.TvInputInfo)>": {
            "startTime": "2025-06-10 21:20:33 231",
            "takes": 9
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean startShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 237",
            "takes": 10
        },
        "<com.android.server.musicrecognition.MusicRecognitionManagerPerUserService$MusicRecognitionServiceCallback: void onRecognitionSucceeded(android.media.MediaMetadata,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 264",
            "takes": 51
        },
        "<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHdmiInput(int,android.media.tv.TvInputInfo)>": {
            "startTime": "2025-06-10 21:20:33 242",
            "takes": 15
        },
        "<com.android.server.audio.AudioService: int requestAudioFocusForTest(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,int,int)>": {
            "startTime": "2025-06-10 21:20:33 233",
            "takes": 16
        },
        "<com.android.server.audio.AudioService: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>": {
            "startTime": "2025-06-10 21:20:33 98",
            "takes": 2
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.app.PendingIntent getShortcutIntent(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,android.os.UserHandle)>": {
            "startTime": "2025-06-10 21:20:33 282",
            "takes": 50
        },
        "<com.android.server.audio.AudioService: int getFocusRampTimeMs(int,android.media.AudioAttributes)>": {
            "startTime": "2025-06-10 21:20:32 473",
            "takes": 3
        },
        "<com.android.server.audio.AudioService: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>": {
            "startTime": "2025-06-10 21:20:33 282",
            "takes": 39
        },
        "<com.android.server.notification.NotificationManagerService$11: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>": {
            "startTime": "2025-06-10 21:20:42 293",
            "takes": 95
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:43 409",
            "takes": 13
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int schedule(java.lang.String,android.app.job.JobInfo)>": {
            "startTime": "2025-06-10 21:20:42 995",
            "takes": 9
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 278",
            "takes": 49
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void showSession(android.os.Bundle,int,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 292",
            "takes": 429
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void notifyError(android.os.IBinder,java.lang.String,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 138",
            "takes": 11
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setPlaybackToLocal(android.media.AudioAttributes)>": {
            "startTime": "2025-06-10 21:20:33 273",
            "takes": 50
        },
        "<com.android.server.audio.AudioService: android.media.VolumeInfo getDeviceVolume(android.media.VolumeInfo,android.media.AudioDeviceAttributes,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:31 534",
            "takes": 4
        },
        "<com.android.server.audio.AudioService: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>": {
            "startTime": "2025-06-10 21:20:32 372",
            "takes": 4
        },
        "<com.android.server.pm.UserManagerService: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 287",
            "takes": 38
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackErrorEvent(java.lang.String,android.media.metrics.PlaybackErrorEvent,int)>": {
            "startTime": "2025-06-10 21:20:33 235",
            "takes": 13
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void notifyInteraction(int,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 274",
            "takes": 48
        },
        "<com.android.server.media.MediaRouterService: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)>": {
            "startTime": "2025-06-10 21:20:33 181",
            "takes": 3
        },
        "<com.android.server.input.InputManagerService: void setKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 211",
            "takes": 5
        },
        "<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void onPrintJobQueued(android.print.PrintJobInfo)>": {
            "startTime": "2025-06-10 21:20:33 218",
            "takes": 4
        },
        "<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>": {
            "startTime": "2025-06-10 21:20:33 291",
            "takes": 28
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void tune(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 246",
            "takes": 18
        },
        "<com.android.server.security.AttestationVerificationManagerService$1: void verifyAttestation(android.security.attestationverification.AttestationProfile,int,android.os.Bundle,byte[],com.android.internal.infra.AndroidFuture)>": {
            "startTime": "2025-06-10 21:20:33 272",
            "takes": 43
        },
        "<com.android.server.textservices.TextServicesManagerService: void getSpellCheckerService(int,java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 194",
            "takes": 527
        },
        "<com.android.server.BinaryTransparencyService$BinaryTransparencyServiceImpl: java.util.List collectAllSilentInstalledMbaInfo(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 196",
            "takes": 12
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>": {
            "startTime": "2025-06-10 21:20:33 228",
            "takes": 4
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int,java.lang.String,int)>": {
            "startTime": "2025-06-10 21:20:32 359",
            "takes": 2
        },
        "<com.android.server.audio.AudioService: int abandonAudioFocusForTest(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 225",
            "takes": 5
        },
        "<com.android.server.audio.AudioService: long getFadeOutDurationOnFocusLossMillis(android.media.AudioAttributes)>": {
            "startTime": "2025-06-10 21:20:32 758",
            "takes": 17
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void requestAd(android.os.IBinder,android.media.tv.AdRequest,int)>": {
            "startTime": "2025-06-10 21:20:33 190",
            "takes": 18
        },
        "<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void setUserData(android.service.autofill.UserData)>": {
            "startTime": "2025-06-10 21:20:33 254",
            "takes": 24
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void createSearchSession(android.app.search.SearchContext,android.app.search.SearchSessionId,android.os.IBinder)>": {
            "startTime": "2025-06-10 21:20:33 260",
            "takes": 62
        },
        "<com.android.server.clipboard.ClipboardService$ClipboardImpl: void setPrimaryClipAsPackage(android.content.ClipData,java.lang.String,java.lang.String,int,int,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 210",
            "takes": 4
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetOptions(java.lang.String,int,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 560",
            "takes": 6
        },
        "<com.android.server.accounts.AccountManagerService: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 582",
            "takes": 1
        },
        "<com.android.server.notification.NotificationManagerService$11: void createConversationNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 724",
            "takes": 20
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal clearCredentialState(android.credentials.ClearCredentialStateRequest,android.credentials.IClearCredentialStateCallback,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 292",
            "takes": 40
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onRequestScheduleRecording2(java.lang.String,java.lang.String,android.net.Uri,long,long,int,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 239",
            "takes": 14
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void notifyTvMessage(android.os.IBinder,int,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 287",
            "takes": 35
        },
        "<com.android.server.media.MediaRouterService: void transferToRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>": {
            "startTime": "2025-06-10 21:20:31 533",
            "takes": 4
        },
        "<com.android.server.compat.PlatformCompat: void reportChange(long,android.content.pm.ApplicationInfo)>": {
            "startTime": "2025-06-10 21:20:33 286",
            "takes": 31
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void sendAppPrivateCommand(android.os.IBinder,java.lang.String,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 267",
            "takes": 51
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void provideContextImage(int,int,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 179",
            "takes": 4
        },
        "<com.android.server.tv.TvInputManagerService$SessionCallback: void onSessionEvent(java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:31 862",
            "takes": 13
        },
        "<com.android.server.midi.MidiService: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>": {
            "startTime": "2025-06-10 21:20:33 275",
            "takes": 47
        },
        "<com.android.server.statusbar.StatusBarManagerService: void updateMediaTapToTransferSenderDisplay(int,android.media.MediaRoute2Info,com.android.internal.statusbar.IUndoMediaTransferCallback)>": {
            "startTime": "2025-06-10 21:20:33 241",
            "takes": 35
        },
        "<com.android.server.midi.MidiService: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>": {
            "startTime": "2025-06-10 21:20:33 195",
            "takes": 9
        },
        "<com.android.server.wallpaper.WallpaperManagerService: void notifyWakingUp(int,int,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 235",
            "takes": 25
        },
        "<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 304",
            "takes": 35
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)>": {
            "startTime": "2025-06-10 21:20:32 177",
            "takes": 3
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setPlaybackState(android.media.session.PlaybackState)>": {
            "startTime": "2025-06-10 21:20:32 460",
            "takes": 3
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void pauseRecording(android.os.IBinder,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 185",
            "takes": 4
        },
        "<com.android.server.location.LocationManagerService: void sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 260",
            "takes": 58
        },
        "<com.android.server.statusbar.StatusBarManagerService: void onNotificationActionClick(java.lang.String,int,android.app.Notification$Action,com.android.internal.statusbar.NotificationVisibility,boolean)>": {
            "startTime": "2025-06-10 21:20:31 531",
            "takes": 18
        },
        "<com.android.server.statusbar.StatusBarManagerService: void onNotificationFeedbackReceived(java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 287",
            "takes": 44
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void sendCommand(java.lang.String,java.lang.String,android.os.Bundle,android.os.ResultReceiver)>": {
            "startTime": "2025-06-10 21:20:32 402",
            "takes": 3
        },
        "<com.android.server.MmsServiceBroker$BinderService: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent,long,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:32 668",
            "takes": 2
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executeGetCredential(android.credentials.GetCredentialRequest,android.credentials.IGetCredentialCallback,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 523",
            "takes": 36
        },
        "<com.android.server.audio.AudioService: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean,boolean,boolean,android.media.projection.IMediaProjection)>": {
            "startTime": "2025-06-10 21:20:33 204",
            "takes": 5
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 191",
            "takes": 18
        },
        "<com.android.server.om.OverlayManagerService$1: void commit(android.content.om.OverlayManagerTransaction)>": {
            "startTime": "2025-06-10 21:20:33 703",
            "takes": 17
        },
        "<com.android.server.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 592",
            "takes": 5
        },
        "<com.android.server.media.MediaRouterService: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)>": {
            "startTime": "2025-06-10 21:20:32 743",
            "takes": 2
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)>": {
            "startTime": "2025-06-10 21:20:34 208",
            "takes": 1
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackMetrics(java.lang.String,android.media.metrics.PlaybackMetrics,int)>": {
            "startTime": "2025-06-10 21:20:32 720",
            "takes": 2
        },
        "<com.android.server.clipboard.ClipboardService$ClipboardImpl: void setPrimaryClip(android.content.ClipData,java.lang.String,java.lang.String,int,int)>": {
            "startTime": "2025-06-10 21:20:33 222",
            "takes": 4
        },
        "<com.android.server.media.MediaRouterService: void requestCreateSessionWithManager(android.media.IMediaRouter2Manager,int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>": {
            "startTime": "2025-06-10 21:20:33 261",
            "takes": 58
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>": {
            "startTime": "2025-06-10 21:20:33 422",
            "takes": 22
        },
        "<com.android.server.media.MediaRouterService: void transferToRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>": {
            "startTime": "2025-06-10 21:20:33 267",
            "takes": 36
        },
        "<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 231",
            "takes": 3
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void resumeRecording(android.os.IBinder,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 186",
            "takes": 13
        },
        "<com.android.server.audio.AudioService: boolean canBeSpatialized(android.media.AudioAttributes,android.media.AudioFormat)>": {
            "startTime": "2025-06-10 21:20:33 196",
            "takes": 14
        },
        "<com.android.server.am.ActivityManagerService: void addInstrumentationResults(android.app.IApplicationThread,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 187",
            "takes": 16
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$3: void onSetUiHints(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 278",
            "takes": 33
        },
        "<com.android.server.BinaryTransparencyService$BinaryTransparencyServiceImpl: java.util.List collectAllUpdatedPreloadInfo(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:31 532",
            "takes": 4
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>": {
            "startTime": "2025-06-10 21:20:33 371",
            "takes": 3
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>": {
            "startTime": "2025-06-10 21:20:33 202",
            "takes": 5
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onCommandRequest(java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 219",
            "takes": 3
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int,boolean)>": {
            "startTime": "2025-06-10 21:20:32 461",
            "takes": 3
        },
        "<com.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub: void createSmartspaceSession(android.app.smartspace.SmartspaceConfig,android.app.smartspace.SmartspaceSessionId,android.os.IBinder)>": {
            "startTime": "2025-06-10 21:20:33 195",
            "takes": 16
        },
        "<com.android.server.backup.BackupManagerService: void updateTransportAttributesForUser(int,android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)>": {
            "startTime": "2025-06-10 21:20:33 226",
            "takes": 4
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void updateEstimatedNetworkBytes(int,android.app.job.JobWorkItem,long,long)>": {
            "startTime": "2025-06-10 21:20:32 918",
            "takes": 2
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportTrackChangeEvent(java.lang.String,android.media.metrics.TrackChangeEvent,int)>": {
            "startTime": "2025-06-10 21:20:33 186",
            "takes": 7
        },
        "<com.android.server.notification.NotificationManagerService$11: void applyAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>": {
            "startTime": "2025-06-10 21:20:34 22",
            "takes": 3
        },
        "<com.android.server.audio.AudioService: void playerAttributes(int,android.media.AudioAttributes)>": {
            "startTime": "2025-06-10 21:20:33 134",
            "takes": 3
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean requestAutofillData(android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,int)>": {
            "startTime": "2025-06-10 21:20:33 245",
            "takes": 52
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.app.IApplicationThread,android.os.IBinder,android.content.Intent,android.app.IServiceConnection,long,int)>": {
            "startTime": "2025-06-10 21:20:34 158",
            "takes": 84
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void notifyEvent(android.app.search.SearchSessionId,android.app.search.Query,android.app.search.SearchTargetEvent)>": {
            "startTime": "2025-06-10 21:20:33 281",
            "takes": 46
        },
        "<com.android.server.media.MediaRouterService: void selectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>": {
            "startTime": "2025-06-10 21:20:33 287",
            "takes": 33
        },
        "<com.android.server.notification.NotificationManagerService$11: boolean matchesCallFilter(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 215",
            "takes": 5
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 239",
            "takes": 18
        },
        "<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>": {
            "startTime": "2025-06-10 21:20:32 486",
            "takes": 12
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onTimeShiftCommandRequest(java.lang.String,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:31 521",
            "takes": 13
        },
        "<com.android.server.location.LocationManagerService: void injectLocation(android.location.Location)>": {
            "startTime": "2025-06-10 21:20:33 368",
            "takes": 2
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackStateEvent(java.lang.String,android.media.metrics.PlaybackStateEvent,int)>": {
            "startTime": "2025-06-10 21:20:33 291",
            "takes": 17
        },
        "<com.android.server.accounts.AccountManagerService: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>": {
            "startTime": "2025-06-10 21:20:33 720",
            "takes": 9
        },
        "<com.android.server.compat.PlatformCompat: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>": {
            "startTime": "2025-06-10 21:20:32 646",
            "takes": 2
        },
        "<com.android.server.audio.AudioService: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>": {
            "startTime": "2025-06-10 21:20:33 286",
            "takes": 41
        },
        "<com.android.server.media.MediaRouterService: void selectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>": {
            "startTime": "2025-06-10 21:20:32 930",
            "takes": 2
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executeCreateCredential(android.credentials.CreateCredentialRequest,android.credentials.ICreateCredentialCallback,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 225",
            "takes": 7
        },
        "<com.android.server.audio.AudioService: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>": {
            "startTime": "2025-06-10 21:20:33 253",
            "takes": 24
        },
        "<com.android.server.accounts.AccountManagerService: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:33 510",
            "takes": 1
        },
        "<com.android.server.wm.ActivityTaskManagerService: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>": {
            "startTime": "2025-06-10 21:20:33 264",
            "takes": 48
        },
        "<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void onPrintJobStateChanged(android.print.PrintJobInfo)>": {
            "startTime": "2025-06-10 21:20:33 171",
            "takes": 3
        },
        "<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerSessionStub: int startRecognitionForService(android.os.ParcelUuid,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>": {
            "startTime": "2025-06-10 21:20:32 266",
            "takes": 33
        },
        "<com.android.server.content.ContentService: void putCache(java.lang.String,android.net.Uri,android.os.Bundle,int)>": {
            "startTime": "2025-06-10 21:20:32 884",
            "takes": 3
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void updateTvInputInfo(android.media.tv.TvInputInfo,int)>": {
            "startTime": "2025-06-10 21:20:33 260",
            "takes": 77
        },
        "<com.android.server.accounts.AccountManagerService: void startAddAccountSession(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 560",
            "takes": 10
        },
        "<com.android.server.audio.AudioService: int setPreferredMixerAttributes(android.media.AudioAttributes,int,android.media.AudioMixerAttributes)>": {
            "startTime": "2025-06-10 21:20:33 285",
            "takes": 53
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.app.IApplicationThread,android.os.IBinder,android.app.IServiceConnection,long)>": {
            "startTime": "2025-06-10 21:20:33 251",
            "takes": 464
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int scheduleAsPackage(java.lang.String,android.app.job.JobInfo,java.lang.String,int,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:42 841",
            "takes": 12
        },
        "<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int,int)>": {
            "startTime": "2025-06-10 21:20:33 256",
            "takes": 57
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void query(android.app.search.SearchSessionId,android.app.search.Query,android.app.search.ISearchCallback)>": {
            "startTime": "2025-06-10 21:20:33 133",
            "takes": 3
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setUiHints(android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 150",
            "takes": 21
        },
        "<com.android.server.media.MediaRoute2ProviderServiceProxy$ServiceCallbackStub: void notifySessionCreated(long,android.media.RoutingSessionInfo)>": {
            "startTime": "2025-06-10 21:20:33 275",
            "takes": 41
        },
        "<com.android.server.MmsServiceBroker$BinderService: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>": {
            "startTime": "2025-06-10 21:20:33 192",
            "takes": 19
        },
        "<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUserByIntent(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,int,android.os.IBinder,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:33 188",
            "takes": 9
        },
        "<com.android.server.media.MediaRoute2ProviderServiceProxy$ServiceCallbackStub: void notifySessionReleased(android.media.RoutingSessionInfo)>": {
            "startTime": "2025-06-10 21:20:32 850",
            "takes": 3
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>": {
            "startTime": "2025-06-10 21:20:32 741",
            "takes": 3
        },
        "<com.android.server.autofill.RemoteAugmentedAutofillService$1$1: void onSuccess(java.util.List,android.os.Bundle,boolean)>": {
            "startTime": "2025-06-10 21:20:33 259",
            "takes": 58
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int startVoiceActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String)>": {
            "startTime": "2025-06-10 21:20:33 291",
            "takes": 425
        }
    },
    "AnalyzeContextMap": {
        "<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void onPrintJobQueued(android.print.PrintJobInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 5,
            "pointerToObjectSet": 13,
            "pointerFlowGraph": 14,
            "variableFlowGraph": 15,
            "objects": 7,
            "pointers": 26
        },
        "<com.android.server.content.ContentService: void putCache(java.lang.String,android.net.Uri,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 20,
            "pointerToObjectSet": 67,
            "pointerFlowGraph": 60,
            "variableFlowGraph": 67,
            "objects": 22,
            "pointers": 117
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void sendCustomAction(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 33,
            "pointerToObjectSet": 107,
            "pointerFlowGraph": 118,
            "variableFlowGraph": 124,
            "objects": 35,
            "pointers": 198
        },
        "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 360,
            "pointerToObjectSet": 2212,
            "pointerFlowGraph": 2716,
            "variableFlowGraph": 2904,
            "objects": 778,
            "pointers": 3756
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void sendCommand(java.lang.String,java.lang.String,android.os.Bundle,android.os.ResultReceiver)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 33,
            "pointerToObjectSet": 111,
            "pointerFlowGraph": 122,
            "variableFlowGraph": 128,
            "objects": 36,
            "pointers": 203
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportNetworkEvent(java.lang.String,android.media.metrics.NetworkEvent,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 50,
            "pointerToObjectSet": 139,
            "pointerFlowGraph": 193,
            "variableFlowGraph": 211,
            "objects": 57,
            "pointers": 320
        },
        "<com.android.server.media.MediaRouterService: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 17,
            "pointerToObjectSet": 56,
            "pointerFlowGraph": 69,
            "variableFlowGraph": 75,
            "objects": 23,
            "pointers": 116
        },
        "<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 23,
            "pointerToObjectSet": 85,
            "pointerFlowGraph": 118,
            "variableFlowGraph": 125,
            "objects": 33,
            "pointers": 191
        },
        "<com.android.server.timedetector.TimeDetectorService: boolean updateConfiguration(android.app.time.TimeConfiguration)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 11,
            "pointerToObjectSet": 35,
            "pointerFlowGraph": 32,
            "variableFlowGraph": 34,
            "objects": 11,
            "pointers": 57
        },
        "<com.android.server.clipboard.ClipboardService$ClipboardImpl: void setPrimaryClipAsPackage(android.content.ClipData,java.lang.String,java.lang.String,int,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 156,
            "pointerToObjectSet": 720,
            "pointerFlowGraph": 675,
            "variableFlowGraph": 727,
            "objects": 196,
            "pointers": 1091
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void resumeRecording(android.os.IBinder,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 76,
            "pointerToObjectSet": 255,
            "pointerFlowGraph": 255,
            "variableFlowGraph": 266,
            "objects": 63,
            "pointers": 432
        },
        "<com.android.server.media.MediaRoute2ProviderServiceProxy$ServiceCallbackStub: void notifySessionCreated(long,android.media.RoutingSessionInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 30,
            "pointerToObjectSet": 105,
            "pointerFlowGraph": 111,
            "variableFlowGraph": 121,
            "objects": 25,
            "pointers": 172
        },
        "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 359,
            "pointerToObjectSet": 2204,
            "pointerFlowGraph": 2638,
            "variableFlowGraph": 2892,
            "objects": 779,
            "pointers": 3744
        },
        "<com.android.server.notification.NotificationManagerService$11: void createConversationNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 430,
            "pointerToObjectSet": 1879,
            "pointerFlowGraph": 2270,
            "variableFlowGraph": 2442,
            "objects": 580,
            "pointers": 3446
        },
        "<com.android.server.appop.AppOpsService: void setUserRestrictions(android.os.Bundle,android.os.IBinder,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 32,
            "pointerToObjectSet": 117,
            "pointerFlowGraph": 106,
            "variableFlowGraph": 111,
            "objects": 26,
            "pointers": 182
        },
        "<com.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub: void createSmartspaceSession(android.app.smartspace.SmartspaceConfig,android.app.smartspace.SmartspaceSessionId,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 119,
            "pointerToObjectSet": 511,
            "pointerFlowGraph": 512,
            "variableFlowGraph": 539,
            "objects": 131,
            "pointers": 789
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean showSessionFromSession(android.os.IBinder,android.os.Bundle,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 157,
            "pointerToObjectSet": 629,
            "pointerFlowGraph": 705,
            "variableFlowGraph": 755,
            "objects": 161,
            "pointers": 1150
        },
        "<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 1,
            "pointerToObjectSet": 5,
            "pointerFlowGraph": 5,
            "variableFlowGraph": 5,
            "objects": 3,
            "pointers": 10
        },
        "<com.android.server.accounts.AccountManagerService: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 350,
            "pointerToObjectSet": 2115,
            "pointerFlowGraph": 2414,
            "variableFlowGraph": 2604,
            "objects": 655,
            "pointers": 3394
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int,java.lang.String,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 58,
            "pointerToObjectSet": 209,
            "pointerFlowGraph": 213,
            "variableFlowGraph": 228,
            "objects": 55,
            "pointers": 360
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 285,
            "pointerToObjectSet": 1916,
            "pointerFlowGraph": 1736,
            "variableFlowGraph": 1842,
            "objects": 565,
            "pointers": 2814
        },
        "<com.android.server.accounts.AccountManagerService: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 372,
            "pointerToObjectSet": 2219,
            "pointerFlowGraph": 2538,
            "variableFlowGraph": 2735,
            "objects": 674,
            "pointers": 3573
        },
        "<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,int,boolean,android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 44,
            "pointerToObjectSet": 181,
            "pointerFlowGraph": 152,
            "variableFlowGraph": 163,
            "objects": 46,
            "pointers": 267
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean showSessionForActiveService(android.os.Bundle,int,java.lang.String,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 159,
            "pointerToObjectSet": 636,
            "pointerFlowGraph": 712,
            "variableFlowGraph": 764,
            "objects": 162,
            "pointers": 1161
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 672,
            "pointerToObjectSet": 14320,
            "pointerFlowGraph": 12947,
            "variableFlowGraph": 13132,
            "objects": 1316,
            "pointers": 22578
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onTimeShiftCommandRequest(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 12,
            "pointerFlowGraph": 36,
            "variableFlowGraph": 36,
            "objects": 9,
            "pointers": 59
        },
        "<com.android.server.audio.AudioService: int clearPreferredMixerAttributes(android.media.AudioAttributes,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 46,
            "pointerToObjectSet": 133,
            "pointerFlowGraph": 146,
            "variableFlowGraph": 152,
            "objects": 38,
            "pointers": 237
        },
        "<com.android.server.media.MediaRouterService: void transferToRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 21,
            "pointerToObjectSet": 76,
            "pointerFlowGraph": 79,
            "variableFlowGraph": 86,
            "objects": 28,
            "pointers": 138
        },
        "<com.android.server.wm.ActivityClientController: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 49,
            "pointerToObjectSet": 166,
            "pointerFlowGraph": 241,
            "variableFlowGraph": 256,
            "objects": 53,
            "pointers": 346
        },
        "<com.android.server.backup.BackupManagerService: void updateTransportAttributesForUser(int,android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 35,
            "pointerToObjectSet": 156,
            "pointerFlowGraph": 178,
            "variableFlowGraph": 187,
            "objects": 33,
            "pointers": 260
        },
        "<com.android.server.media.MediaRouterService: void requestCreateSessionWithRouter2(android.media.IMediaRouter2,int,long,android.media.RoutingSessionInfo,android.media.MediaRoute2Info,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 40,
            "pointerToObjectSet": 142,
            "pointerFlowGraph": 194,
            "variableFlowGraph": 207,
            "objects": 52,
            "pointers": 310
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void showAppDetailsAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 40,
            "pointerToObjectSet": 126,
            "pointerFlowGraph": 116,
            "variableFlowGraph": 128,
            "objects": 39,
            "pointers": 205
        },
        "<com.android.server.accounts.AccountManagerService: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 367,
            "pointerToObjectSet": 2217,
            "pointerFlowGraph": 2521,
            "variableFlowGraph": 2718,
            "objects": 669,
            "pointers": 3542
        },
        "<com.android.server.audio.AudioService: long getFadeOutDurationOnFocusLossMillis(android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 12,
            "pointerToObjectSet": 30,
            "pointerFlowGraph": 35,
            "variableFlowGraph": 37,
            "objects": 12,
            "pointers": 61
        },
        "<com.android.server.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 381,
            "pointerToObjectSet": 2326,
            "pointerFlowGraph": 2663,
            "variableFlowGraph": 2872,
            "objects": 710,
            "pointers": 3749
        },
        "<com.android.server.autofill.RemoteAugmentedAutofillService$1$1: void onSuccess(java.util.List,android.os.Bundle,boolean)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 136,
            "pointerToObjectSet": 502,
            "pointerFlowGraph": 593,
            "variableFlowGraph": 637,
            "objects": 148,
            "pointers": 925
        },
        "<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerSessionStub: int startRecognitionForService(android.os.ParcelUuid,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 143,
            "pointerToObjectSet": 701,
            "pointerFlowGraph": 840,
            "variableFlowGraph": 883,
            "objects": 183,
            "pointers": 1255
        },
        "<com.android.server.audio.AudioService: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 156,
            "pointerToObjectSet": 840,
            "pointerFlowGraph": 1752,
            "variableFlowGraph": 1807,
            "objects": 238,
            "pointers": 2230
        },
        "<com.android.server.audio.AudioService: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 13,
            "pointerToObjectSet": 52,
            "pointerFlowGraph": 53,
            "variableFlowGraph": 56,
            "objects": 14,
            "pointers": 84
        },
        "<com.android.server.security.AttestationVerificationManagerService$1: void verifyAttestation(android.security.attestationverification.AttestationProfile,int,android.os.Bundle,byte[],com.android.internal.infra.AndroidFuture)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 155,
            "pointerToObjectSet": 642,
            "pointerFlowGraph": 661,
            "variableFlowGraph": 769,
            "objects": 242,
            "pointers": 1078
        },
        "<com.android.server.audio.AudioService: int getFocusRampTimeMs(int,android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 2,
            "pointerToObjectSet": 5,
            "pointerFlowGraph": 12,
            "variableFlowGraph": 13,
            "objects": 2,
            "pointers": 18
        },
        "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 96,
            "pointerToObjectSet": 483,
            "pointerFlowGraph": 464,
            "variableFlowGraph": 520,
            "objects": 116,
            "pointers": 871
        },
        "<com.android.server.om.OverlayManagerService$1: void commit(android.content.om.OverlayManagerTransaction)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 383,
            "pointerToObjectSet": 1715,
            "pointerFlowGraph": 2036,
            "variableFlowGraph": 2176,
            "objects": 514,
            "pointers": 3037
        },
        "<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHdmiInput(int,android.media.tv.TvInputInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 186,
            "pointerToObjectSet": 760,
            "pointerFlowGraph": 873,
            "variableFlowGraph": 920,
            "objects": 221,
            "pointers": 1312
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackErrorEvent(java.lang.String,android.media.metrics.PlaybackErrorEvent,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 52,
            "pointerToObjectSet": 145,
            "pointerFlowGraph": 197,
            "variableFlowGraph": 217,
            "objects": 61,
            "pointers": 328
        },
        "<com.android.server.tv.TvInputManagerService$SessionCallback: void onSessionEvent(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 6,
            "pointerToObjectSet": 11,
            "pointerFlowGraph": 30,
            "variableFlowGraph": 30,
            "objects": 8,
            "pointers": 52
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void updateTransferredNetworkBytes(int,android.app.job.JobWorkItem,long,long)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 8,
            "pointerToObjectSet": 39,
            "pointerFlowGraph": 88,
            "variableFlowGraph": 91,
            "objects": 14,
            "pointers": 121
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void classifyContentSelections(int,android.app.contentsuggestions.ClassificationsRequest,android.app.contentsuggestions.IClassificationsCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 89,
            "pointerToObjectSet": 333,
            "pointerFlowGraph": 368,
            "variableFlowGraph": 389,
            "objects": 109,
            "pointers": 575
        },
        "<com.android.server.accounts.AccountManagerService: void startAddAccountSession(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 372,
            "pointerToObjectSet": 2244,
            "pointerFlowGraph": 2555,
            "variableFlowGraph": 2756,
            "objects": 674,
            "pointers": 3593
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void pauseRecording(android.os.IBinder,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 76,
            "pointerToObjectSet": 255,
            "pointerFlowGraph": 255,
            "variableFlowGraph": 266,
            "objects": 63,
            "pointers": 432
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 6,
            "pointerToObjectSet": 26,
            "pointerFlowGraph": 28,
            "variableFlowGraph": 28,
            "objects": 7,
            "pointers": 41
        },
        "<com.android.server.wallpaper.WallpaperManagerService: void notifyWakingUp(int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 18,
            "pointerToObjectSet": 79,
            "pointerFlowGraph": 125,
            "variableFlowGraph": 128,
            "objects": 26,
            "pointers": 179
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 33,
            "pointerToObjectSet": 102,
            "pointerFlowGraph": 116,
            "variableFlowGraph": 121,
            "objects": 33,
            "pointers": 195
        },
        "<com.android.server.am.ActivityManagerService: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 1,
            "pointerToObjectSet": 7,
            "pointerFlowGraph": 7,
            "variableFlowGraph": 7,
            "objects": 4,
            "pointers": 13
        },
        "<com.android.server.midi.MidiService: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 72,
            "pointerToObjectSet": 311,
            "pointerFlowGraph": 324,
            "variableFlowGraph": 355,
            "objects": 105,
            "pointers": 523
        },
        "<com.android.server.audio.AudioService: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 21,
            "pointerToObjectSet": 60,
            "pointerFlowGraph": 76,
            "variableFlowGraph": 81,
            "objects": 23,
            "pointers": 124
        },
        "<com.android.server.audio.AudioService: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 21,
            "pointerToObjectSet": 58,
            "pointerFlowGraph": 74,
            "variableFlowGraph": 79,
            "objects": 23,
            "pointers": 121
        },
        "<com.android.server.search.SearchManagerService: void launchAssist(int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 2,
            "pointerToObjectSet": 5,
            "pointerFlowGraph": 7,
            "variableFlowGraph": 7,
            "objects": 3,
            "pointers": 14
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 316,
            "pointerToObjectSet": 1591,
            "pointerFlowGraph": 1574,
            "variableFlowGraph": 1704,
            "objects": 434,
            "pointers": 2384
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void requestAd(android.os.IBinder,android.media.tv.AdRequest,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 76,
            "pointerToObjectSet": 251,
            "pointerFlowGraph": 252,
            "variableFlowGraph": 263,
            "objects": 63,
            "pointers": 429
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int scheduleAsPackage(java.lang.String,android.app.job.JobInfo,java.lang.String,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 699,
            "pointerToObjectSet": 11249,
            "pointerFlowGraph": 52243,
            "variableFlowGraph": 53204,
            "objects": 1370,
            "pointers": 57121
        },
        "<com.android.server.notification.NotificationManagerService$11: void applyAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 415,
            "pointerToObjectSet": 2177,
            "pointerFlowGraph": 3068,
            "variableFlowGraph": 3262,
            "objects": 585,
            "pointers": 4208
        },
        "<com.android.server.notification.NotificationManagerService$11: boolean matchesCallFilter(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 160,
            "pointerToObjectSet": 735,
            "pointerFlowGraph": 886,
            "variableFlowGraph": 975,
            "objects": 262,
            "pointers": 1344
        },
        "<com.android.server.audio.AudioService: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 16,
            "pointerToObjectSet": 45,
            "pointerFlowGraph": 68,
            "variableFlowGraph": 73,
            "objects": 21,
            "pointers": 124
        },
        "<com.android.server.audio.AudioService: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 63,
            "pointerToObjectSet": 203,
            "pointerFlowGraph": 171,
            "variableFlowGraph": 187,
            "objects": 64,
            "pointers": 313
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void suggestContentSelections(int,android.app.contentsuggestions.SelectionsRequest,android.app.contentsuggestions.ISelectionsCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 89,
            "pointerToObjectSet": 333,
            "pointerFlowGraph": 368,
            "variableFlowGraph": 389,
            "objects": 109,
            "pointers": 575
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void provideContextImage(int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 96,
            "pointerToObjectSet": 354,
            "pointerFlowGraph": 400,
            "variableFlowGraph": 424,
            "objects": 115,
            "pointers": 626
        },
        "<com.android.server.wm.Session: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 31,
            "pointerToObjectSet": 120,
            "pointerFlowGraph": 141,
            "variableFlowGraph": 148,
            "objects": 42,
            "pointers": 229
        },
        "<com.android.server.compat.PlatformCompat: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 19,
            "pointerToObjectSet": 62,
            "pointerFlowGraph": 53,
            "variableFlowGraph": 59,
            "objects": 26,
            "pointers": 97
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.app.IApplicationThread,android.os.IBinder,android.app.IServiceConnection,long)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 208,
            "pointerToObjectSet": 1047,
            "pointerFlowGraph": 1141,
            "variableFlowGraph": 1215,
            "objects": 325,
            "pointers": 1891
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int startVoiceActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 19,
            "pointerToObjectSet": 70,
            "pointerFlowGraph": 83,
            "variableFlowGraph": 87,
            "objects": 28,
            "pointers": 156
        },
        "<com.android.server.BinaryTransparencyService$BinaryTransparencyServiceImpl: java.util.List collectAllUpdatedPreloadInfo(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 24,
            "pointerFlowGraph": 25,
            "variableFlowGraph": 25,
            "objects": 8,
            "pointers": 41
        },
        "<com.android.server.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 348,
            "pointerToObjectSet": 2107,
            "pointerFlowGraph": 2414,
            "variableFlowGraph": 2604,
            "objects": 649,
            "pointers": 3381
        },
        "<com.android.server.media.MediaRouterService: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 19,
            "pointerToObjectSet": 63,
            "pointerFlowGraph": 64,
            "variableFlowGraph": 67,
            "objects": 23,
            "pointers": 117
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 33,
            "pointerToObjectSet": 102,
            "pointerFlowGraph": 116,
            "variableFlowGraph": 121,
            "objects": 33,
            "pointers": 195
        },
        "<com.android.server.audio.AudioService: int setPreferredMixerAttributes(android.media.AudioAttributes,int,android.media.AudioMixerAttributes)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 47,
            "pointerToObjectSet": 144,
            "pointerFlowGraph": 151,
            "variableFlowGraph": 158,
            "objects": 41,
            "pointers": 247
        },
        "<com.android.server.audio.AudioService: boolean canBeSpatialized(android.media.AudioAttributes,android.media.AudioFormat)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 52,
            "pointerToObjectSet": 181,
            "pointerFlowGraph": 173,
            "variableFlowGraph": 187,
            "objects": 51,
            "pointers": 285
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int schedule(java.lang.String,android.app.job.JobInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 697,
            "pointerToObjectSet": 11222,
            "pointerFlowGraph": 52026,
            "variableFlowGraph": 52985,
            "objects": 1363,
            "pointers": 56886
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void setNotification(int,int,android.app.Notification,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 74,
            "pointerToObjectSet": 295,
            "pointerFlowGraph": 329,
            "variableFlowGraph": 366,
            "objects": 89,
            "pointers": 582
        },
        "<com.android.server.statusbar.StatusBarManagerService: void onNotificationActionClick(java.lang.String,int,android.app.Notification$Action,com.android.internal.statusbar.NotificationVisibility,boolean)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 19,
            "pointerFlowGraph": 23,
            "variableFlowGraph": 23,
            "objects": 9,
            "pointers": 39
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void tune(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 142,
            "pointerToObjectSet": 519,
            "pointerFlowGraph": 581,
            "variableFlowGraph": 610,
            "objects": 117,
            "pointers": 880
        },
        "<com.android.server.audio.AudioService: android.media.VolumeInfo getDeviceVolume(android.media.VolumeInfo,android.media.AudioDeviceAttributes,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 34,
            "pointerToObjectSet": 104,
            "pointerFlowGraph": 107,
            "variableFlowGraph": 130,
            "objects": 35,
            "pointers": 192
        },
        "<com.android.server.timezonedetector.TimeZoneDetectorService: boolean updateConfiguration(android.app.time.TimeZoneConfiguration)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 11,
            "pointerToObjectSet": 35,
            "pointerFlowGraph": 32,
            "variableFlowGraph": 34,
            "objects": 11,
            "pointers": 57
        },
        "<com.android.server.job.JobServiceContext$JobCallback: void updateEstimatedNetworkBytes(int,android.app.job.JobWorkItem,long,long)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 8,
            "pointerToObjectSet": 39,
            "pointerFlowGraph": 88,
            "variableFlowGraph": 91,
            "objects": 14,
            "pointers": 121
        },
        "<com.android.server.media.MediaRouterService: void deselectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 21,
            "pointerToObjectSet": 76,
            "pointerFlowGraph": 79,
            "variableFlowGraph": 86,
            "objects": 28,
            "pointers": 138
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void notifyError(android.os.IBinder,java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 41,
            "pointerToObjectSet": 153,
            "pointerFlowGraph": 163,
            "variableFlowGraph": 168,
            "objects": 34,
            "pointers": 249
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void notifyTvMessage(android.os.IBinder,int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 41,
            "pointerToObjectSet": 151,
            "pointerFlowGraph": 163,
            "variableFlowGraph": 168,
            "objects": 33,
            "pointers": 249
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 33,
            "pointerToObjectSet": 102,
            "pointerFlowGraph": 116,
            "variableFlowGraph": 121,
            "objects": 33,
            "pointers": 195
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setUiHints(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 11,
            "pointerToObjectSet": 26,
            "pointerFlowGraph": 35,
            "variableFlowGraph": 37,
            "objects": 13,
            "pointers": 68
        },
        "<com.android.server.media.MediaRoute2ProviderServiceProxy$ServiceCallbackStub: void notifySessionReleased(android.media.RoutingSessionInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 30,
            "pointerToObjectSet": 104,
            "pointerFlowGraph": 101,
            "variableFlowGraph": 109,
            "objects": 32,
            "pointers": 160
        },
        "<com.android.server.wm.ActivityClientController: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 51,
            "pointerToObjectSet": 165,
            "pointerFlowGraph": 253,
            "variableFlowGraph": 265,
            "objects": 47,
            "pointers": 365
        },
        "<com.android.server.input.InputManagerService: java.lang.String getKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 147,
            "pointerToObjectSet": 746,
            "pointerFlowGraph": 678,
            "variableFlowGraph": 769,
            "objects": 255,
            "pointers": 1098
        },
        "<com.android.server.audio.AudioService: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean,boolean,boolean,android.media.projection.IMediaProjection)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 160,
            "pointerToObjectSet": 567,
            "pointerFlowGraph": 647,
            "variableFlowGraph": 690,
            "objects": 179,
            "pointers": 1028
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$3: void onSetUiHints(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 0,
            "pointerToObjectSet": 1,
            "pointerFlowGraph": 2,
            "variableFlowGraph": 2,
            "objects": 1,
            "pointers": 4
        },
        "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.app.IApplicationThread,android.os.IBinder,android.content.Intent,android.app.IServiceConnection,long,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 286,
            "pointerToObjectSet": 1941,
            "pointerFlowGraph": 1748,
            "variableFlowGraph": 1867,
            "objects": 572,
            "pointers": 2847
        },
        "<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 162,
            "pointerToObjectSet": 701,
            "pointerFlowGraph": 824,
            "variableFlowGraph": 906,
            "objects": 198,
            "pointers": 1310
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean requestAssistContextExtras(int,android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 72,
            "pointerToObjectSet": 265,
            "pointerFlowGraph": 395,
            "variableFlowGraph": 415,
            "objects": 68,
            "pointers": 569
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onRequestScheduleRecording(java.lang.String,java.lang.String,android.net.Uri,android.net.Uri,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 18,
            "pointerFlowGraph": 42,
            "variableFlowGraph": 42,
            "objects": 12,
            "pointers": 68
        },
        "<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 2,
            "pointerToObjectSet": 7,
            "pointerFlowGraph": 10,
            "variableFlowGraph": 11,
            "objects": 4,
            "pointers": 18
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setExtras(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 8,
            "pointerToObjectSet": 20,
            "pointerFlowGraph": 34,
            "variableFlowGraph": 35,
            "objects": 8,
            "pointers": 54
        },
        "<com.android.server.media.MediaRouterService: void deselectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 18,
            "pointerToObjectSet": 61,
            "pointerFlowGraph": 60,
            "variableFlowGraph": 63,
            "objects": 22,
            "pointers": 108
        },
        "<com.android.server.compat.PlatformCompat: void reportChange(long,android.content.pm.ApplicationInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 3,
            "pointerToObjectSet": 7,
            "pointerFlowGraph": 18,
            "variableFlowGraph": 18,
            "objects": 3,
            "pointers": 27
        },
        "<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 23,
            "pointerFlowGraph": 19,
            "variableFlowGraph": 20,
            "objects": 7,
            "pointers": 37
        },
        "<com.android.server.security.AttestationVerificationManagerService$1: void verifyToken(android.security.attestationverification.VerificationToken,android.os.ParcelDuration,com.android.internal.infra.AndroidFuture)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 5,
            "pointerToObjectSet": 14,
            "pointerFlowGraph": 17,
            "variableFlowGraph": 17,
            "objects": 7,
            "pointers": 30
        },
        "<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUserByIntent(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,int,android.os.IBinder,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 43,
            "pointerToObjectSet": 184,
            "pointerFlowGraph": 151,
            "variableFlowGraph": 164,
            "objects": 46,
            "pointers": 255
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executeGetCredential(android.credentials.GetCredentialRequest,android.credentials.IGetCredentialCallback,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 318,
            "pointerToObjectSet": 1592,
            "pointerFlowGraph": 1590,
            "variableFlowGraph": 1720,
            "objects": 433,
            "pointers": 2399
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onCommandRequest(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 12,
            "pointerFlowGraph": 36,
            "variableFlowGraph": 36,
            "objects": 9,
            "pointers": 59
        },
        "<com.android.server.wm.ActivityTaskManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 114,
            "pointerToObjectSet": 489,
            "pointerFlowGraph": 551,
            "variableFlowGraph": 594,
            "objects": 161,
            "pointers": 1000
        },
        "<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 103,
            "pointerToObjectSet": 397,
            "pointerFlowGraph": 493,
            "variableFlowGraph": 531,
            "objects": 133,
            "pointers": 773
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executeCreateCredential(android.credentials.CreateCredentialRequest,android.credentials.ICreateCredentialCallback,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 267,
            "pointerToObjectSet": 1290,
            "pointerFlowGraph": 1295,
            "variableFlowGraph": 1375,
            "objects": 307,
            "pointers": 1950
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.app.PendingIntent getShortcutIntent(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,android.os.UserHandle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 38,
            "pointerToObjectSet": 167,
            "pointerFlowGraph": 149,
            "variableFlowGraph": 160,
            "objects": 41,
            "pointers": 244
        },
        "<com.android.server.audio.AudioService: int requestAudioFocusForTest(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,int,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 143,
            "pointerToObjectSet": 771,
            "pointerFlowGraph": 1676,
            "variableFlowGraph": 1721,
            "objects": 211,
            "pointers": 2095
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setPlaybackState(android.media.session.PlaybackState)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 49,
            "pointerToObjectSet": 159,
            "pointerFlowGraph": 171,
            "variableFlowGraph": 181,
            "objects": 57,
            "pointers": 276
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int,boolean)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 29,
            "pointerToObjectSet": 91,
            "pointerFlowGraph": 110,
            "variableFlowGraph": 116,
            "objects": 35,
            "pointers": 199
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void createBiInteractiveApp(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 41,
            "pointerToObjectSet": 153,
            "pointerFlowGraph": 163,
            "variableFlowGraph": 168,
            "objects": 34,
            "pointers": 249
        },
        "<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHardwareInput(int,android.media.tv.TvInputInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 194,
            "pointerToObjectSet": 792,
            "pointerFlowGraph": 936,
            "variableFlowGraph": 986,
            "objects": 241,
            "pointers": 1389
        },
        "<com.android.server.audio.AudioService: void playerAttributes(int,android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 57,
            "pointerToObjectSet": 181,
            "pointerFlowGraph": 181,
            "variableFlowGraph": 200,
            "objects": 61,
            "pointers": 321
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 191,
            "pointerToObjectSet": 938,
            "pointerFlowGraph": 986,
            "variableFlowGraph": 1057,
            "objects": 282,
            "pointers": 1634
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void notifyTvMessage(android.os.IBinder,int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 76,
            "pointerToObjectSet": 255,
            "pointerFlowGraph": 257,
            "variableFlowGraph": 268,
            "objects": 63,
            "pointers": 435
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 200,
            "pointerToObjectSet": 999,
            "pointerFlowGraph": 1114,
            "variableFlowGraph": 1183,
            "objects": 296,
            "pointers": 1814
        },
        "<com.android.server.textservices.TextServicesManagerService: void getSpellCheckerService(int,java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 66,
            "pointerToObjectSet": 269,
            "pointerFlowGraph": 288,
            "variableFlowGraph": 306,
            "objects": 66,
            "pointers": 436
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean startShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 50,
            "pointerToObjectSet": 223,
            "pointerFlowGraph": 190,
            "variableFlowGraph": 207,
            "objects": 54,
            "pointers": 324
        },
        "<com.android.server.am.ActivityManagerService: void addInstrumentationResults(android.app.IApplicationThread,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 36,
            "pointerToObjectSet": 104,
            "pointerFlowGraph": 118,
            "variableFlowGraph": 134,
            "objects": 37,
            "pointers": 205
        },
        "<com.android.server.audio.AudioService: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 15,
            "pointerToObjectSet": 44,
            "pointerFlowGraph": 56,
            "variableFlowGraph": 62,
            "objects": 21,
            "pointers": 104
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void performDirectAction(android.os.IBinder,java.lang.String,android.os.Bundle,int,android.os.IBinder,android.os.RemoteCallback,android.os.RemoteCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 12,
            "pointerToObjectSet": 42,
            "pointerFlowGraph": 59,
            "variableFlowGraph": 61,
            "objects": 14,
            "pointers": 97
        },
        "<com.android.server.audio.AudioService: java.util.List getDevicesForAttributesUnprotected(android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 10,
            "pointerToObjectSet": 43,
            "pointerFlowGraph": 45,
            "variableFlowGraph": 48,
            "objects": 10,
            "pointers": 68
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setMetadata(android.media.MediaMetadata,long,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 27,
            "pointerToObjectSet": 68,
            "pointerFlowGraph": 95,
            "variableFlowGraph": 100,
            "objects": 22,
            "pointers": 159
        },
        "<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void setAuthenticationResult(android.os.Bundle,int,int,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 643,
            "pointerToObjectSet": 5050,
            "pointerFlowGraph": 18577,
            "variableFlowGraph": 18868,
            "objects": 1180,
            "pointers": 20272
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetOptions(java.lang.String,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 247,
            "pointerToObjectSet": 1199,
            "pointerFlowGraph": 1597,
            "variableFlowGraph": 1706,
            "objects": 383,
            "pointers": 2404
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 33,
            "pointerToObjectSet": 102,
            "pointerFlowGraph": 116,
            "variableFlowGraph": 121,
            "objects": 33,
            "pointers": 195
        },
        "<com.android.server.notification.NotificationManagerService$11: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 661,
            "pointerToObjectSet": 3296,
            "pointerFlowGraph": 4335,
            "variableFlowGraph": 4606,
            "objects": 975,
            "pointers": 6123
        },
        "<com.android.server.MmsServiceBroker$BinderService: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent,long,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 44,
            "pointerToObjectSet": 119,
            "pointerFlowGraph": 136,
            "variableFlowGraph": 152,
            "objects": 46,
            "pointers": 244
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 30,
            "pointerToObjectSet": 98,
            "pointerFlowGraph": 125,
            "variableFlowGraph": 131,
            "objects": 34,
            "pointers": 214
        },
        "<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 25,
            "pointerFlowGraph": 21,
            "variableFlowGraph": 22,
            "objects": 11,
            "pointers": 39
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onRequestScheduleRecording2(java.lang.String,java.lang.String,android.net.Uri,long,long,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 16,
            "pointerFlowGraph": 46,
            "variableFlowGraph": 46,
            "objects": 11,
            "pointers": 74
        },
        "<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayoutListForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 126,
            "pointerToObjectSet": 589,
            "pointerFlowGraph": 565,
            "variableFlowGraph": 644,
            "objects": 203,
            "pointers": 921
        },
        "<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void setUserData(android.service.autofill.UserData)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 34,
            "pointerToObjectSet": 97,
            "pointerFlowGraph": 117,
            "variableFlowGraph": 128,
            "objects": 31,
            "pointers": 194
        },
        "<com.android.server.input.InputManagerService: void setKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 120,
            "pointerToObjectSet": 567,
            "pointerFlowGraph": 571,
            "variableFlowGraph": 596,
            "objects": 193,
            "pointers": 884
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int startAssistantActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 12,
            "pointerToObjectSet": 49,
            "pointerFlowGraph": 57,
            "variableFlowGraph": 59,
            "objects": 17,
            "pointers": 99
        },
        "<com.android.server.statusbar.StatusBarManagerService: void updateMediaTapToTransferSenderDisplay(int,android.media.MediaRoute2Info,com.android.internal.statusbar.IUndoMediaTransferCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 4,
            "pointerToObjectSet": 11,
            "pointerFlowGraph": 19,
            "variableFlowGraph": 19,
            "objects": 5,
            "pointers": 33
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void provideContextBitmap(int,android.graphics.Bitmap,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 92,
            "pointerToObjectSet": 335,
            "pointerFlowGraph": 392,
            "variableFlowGraph": 413,
            "objects": 111,
            "pointers": 609
        },
        "<com.android.server.accounts.AccountManagerService: void finishSessionAsUser(android.accounts.IAccountManagerResponse,android.os.Bundle,boolean,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 395,
            "pointerToObjectSet": 2280,
            "pointerFlowGraph": 2595,
            "variableFlowGraph": 2800,
            "objects": 693,
            "pointers": 3684
        },
        "<com.android.server.compat.PlatformCompat: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 15,
            "pointerToObjectSet": 53,
            "pointerFlowGraph": 75,
            "variableFlowGraph": 82,
            "objects": 18,
            "pointers": 108
        },
        "<com.android.server.audio.AudioService: void addOnDevicesForAttributesChangedListener(android.media.AudioAttributes,android.media.IDevicesForAttributesCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 15,
            "pointerToObjectSet": 71,
            "pointerFlowGraph": 59,
            "variableFlowGraph": 68,
            "objects": 24,
            "pointers": 106
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackMetrics(java.lang.String,android.media.metrics.PlaybackMetrics,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 65,
            "pointerToObjectSet": 186,
            "pointerFlowGraph": 225,
            "variableFlowGraph": 258,
            "objects": 88,
            "pointers": 384
        },
        "<com.android.server.wm.ActivityTaskManagerService: boolean requestAutofillData(android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 72,
            "pointerToObjectSet": 265,
            "pointerFlowGraph": 392,
            "variableFlowGraph": 412,
            "objects": 68,
            "pointers": 566
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void startRecording(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 76,
            "pointerToObjectSet": 257,
            "pointerFlowGraph": 257,
            "variableFlowGraph": 268,
            "objects": 64,
            "pointers": 435
        },
        "<com.android.server.MmsServiceBroker$BinderService: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent,long,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 41,
            "pointerToObjectSet": 113,
            "pointerFlowGraph": 130,
            "variableFlowGraph": 146,
            "objects": 43,
            "pointers": 230
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void setPlaybackToLocal(android.media.AudioAttributes)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 48,
            "pointerToObjectSet": 130,
            "pointerFlowGraph": 185,
            "variableFlowGraph": 195,
            "objects": 37,
            "pointers": 299
        },
        "<com.android.server.media.MediaRouterService: void selectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 21,
            "pointerToObjectSet": 76,
            "pointerFlowGraph": 79,
            "variableFlowGraph": 86,
            "objects": 28,
            "pointers": 138
        },
        "<com.android.server.audio.AudioService: boolean sendFocusLoss(android.media.AudioFocusInfo,android.media.audiopolicy.IAudioPolicyCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 27,
            "pointerToObjectSet": 112,
            "pointerFlowGraph": 149,
            "variableFlowGraph": 156,
            "objects": 27,
            "pointers": 255
        },
        "<com.android.server.wm.Session: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 30,
            "pointerToObjectSet": 117,
            "pointerFlowGraph": 178,
            "variableFlowGraph": 188,
            "objects": 46,
            "pointers": 279
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean bindAppWidgetId(java.lang.String,int,int,android.content.ComponentName,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 302,
            "pointerToObjectSet": 1545,
            "pointerFlowGraph": 2002,
            "variableFlowGraph": 2142,
            "objects": 482,
            "pointers": 2976
        },
        "<com.android.server.wallpaper.WallpaperManagerService: void notifyGoingToSleep(int,int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 18,
            "pointerToObjectSet": 79,
            "pointerFlowGraph": 125,
            "variableFlowGraph": 128,
            "objects": 26,
            "pointers": 179
        },
        "<com.android.server.tv.TvInputManagerService$SessionCallback: void onTvMessage(int,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 6,
            "pointerToObjectSet": 9,
            "pointerFlowGraph": 30,
            "variableFlowGraph": 30,
            "objects": 7,
            "pointers": 52
        },
        "<com.android.server.BinaryTransparencyService$BinaryTransparencyServiceImpl: java.util.List collectAllSilentInstalledMbaInfo(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 63,
            "pointerToObjectSet": 193,
            "pointerFlowGraph": 192,
            "variableFlowGraph": 213,
            "objects": 82,
            "pointers": 335
        },
        "<com.android.server.location.provider.proxy.ProxyLocationProvider$Proxy: void onReportLocation(android.location.Location)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 9,
            "pointerToObjectSet": 29,
            "pointerFlowGraph": 26,
            "variableFlowGraph": 28,
            "objects": 12,
            "pointers": 51
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackStateEvent(java.lang.String,android.media.metrics.PlaybackStateEvent,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 50,
            "pointerToObjectSet": 139,
            "pointerFlowGraph": 193,
            "variableFlowGraph": 211,
            "objects": 57,
            "pointers": 320
        },
        "<com.android.server.media.MediaSessionService$SessionManagerImpl: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 165,
            "pointerToObjectSet": 752,
            "pointerFlowGraph": 890,
            "variableFlowGraph": 939,
            "objects": 197,
            "pointers": 1298
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onAdRequest(android.media.tv.AdRequest)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 7,
            "pointerToObjectSet": 10,
            "pointerFlowGraph": 34,
            "variableFlowGraph": 34,
            "objects": 8,
            "pointers": 56
        },
        "<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void onPrintJobStateChanged(android.print.PrintJobInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 6,
            "pointerToObjectSet": 19,
            "pointerFlowGraph": 19,
            "variableFlowGraph": 20,
            "objects": 7,
            "pointers": 31
        },
        "<com.android.server.media.MediaRouterService: void selectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 18,
            "pointerToObjectSet": 61,
            "pointerFlowGraph": 60,
            "variableFlowGraph": 63,
            "objects": 22,
            "pointers": 108
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void query(android.app.search.SearchSessionId,android.app.search.Query,android.app.search.ISearchCallback)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 99,
            "pointerToObjectSet": 428,
            "pointerFlowGraph": 431,
            "variableFlowGraph": 456,
            "objects": 119,
            "pointers": 663
        },
        "<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.inputmethod.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.inputmethod.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.inputmethod.IRemoteInputConnection,com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,int,int,android.window.ImeOnBackInvokedDispatcher)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 626,
            "pointerToObjectSet": 3186,
            "pointerFlowGraph": 4298,
            "variableFlowGraph": 4552,
            "objects": 929,
            "pointers": 6081
        },
        "<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 161,
            "pointerToObjectSet": 697,
            "pointerFlowGraph": 800,
            "variableFlowGraph": 882,
            "objects": 199,
            "pointers": 1286
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void sendTvInputNotifyIntent(android.content.Intent,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 26,
            "pointerToObjectSet": 88,
            "pointerFlowGraph": 94,
            "variableFlowGraph": 104,
            "objects": 40,
            "pointers": 166
        },
        "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int enqueue(java.lang.String,android.app.job.JobInfo,android.app.job.JobWorkItem)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 698,
            "pointerToObjectSet": 11254,
            "pointerFlowGraph": 52232,
            "variableFlowGraph": 53191,
            "objects": 1364,
            "pointers": 57104
        },
        "<com.android.server.media.MediaRouterService: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 15,
            "pointerToObjectSet": 51,
            "pointerFlowGraph": 58,
            "variableFlowGraph": 60,
            "objects": 20,
            "pointers": 99
        },
        "<com.android.server.location.LocationManagerService: void injectLocation(android.location.Location)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 192,
            "pointerToObjectSet": 899,
            "pointerFlowGraph": 1245,
            "variableFlowGraph": 1347,
            "objects": 205,
            "pointers": 1776
        },
        "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportTrackChangeEvent(java.lang.String,android.media.metrics.TrackChangeEvent,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 64,
            "pointerToObjectSet": 180,
            "pointerFlowGraph": 219,
            "variableFlowGraph": 250,
            "objects": 83,
            "pointers": 374
        },
        "<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 87,
            "pointerToObjectSet": 427,
            "pointerFlowGraph": 450,
            "variableFlowGraph": 497,
            "objects": 143,
            "pointers": 695
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 33,
            "pointerToObjectSet": 102,
            "pointerFlowGraph": 116,
            "variableFlowGraph": 121,
            "objects": 33,
            "pointers": 195
        },
        "<com.android.server.pm.permission.PermissionManagerService: boolean addPermission(android.content.pm.PermissionInfo,boolean)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 1,
            "pointerToObjectSet": 6,
            "pointerFlowGraph": 7,
            "variableFlowGraph": 8,
            "objects": 4,
            "pointers": 14
        },
        "<com.android.server.MmsServiceBroker$BinderService: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 16,
            "pointerToObjectSet": 42,
            "pointerFlowGraph": 58,
            "variableFlowGraph": 64,
            "objects": 17,
            "pointers": 102
        },
        "<com.android.server.clipboard.ClipboardService$ClipboardImpl: void setPrimaryClip(android.content.ClipData,java.lang.String,java.lang.String,int,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 155,
            "pointerToObjectSet": 716,
            "pointerFlowGraph": 669,
            "variableFlowGraph": 721,
            "objects": 195,
            "pointers": 1081
        },
        "<com.android.server.media.MediaRouterService: void requestCreateSessionWithManager(android.media.IMediaRouter2Manager,int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 29,
            "pointerToObjectSet": 109,
            "pointerFlowGraph": 147,
            "variableFlowGraph": 154,
            "objects": 32,
            "pointers": 221
        },
        "<com.android.server.location.LocationManagerService: void sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 44,
            "pointerToObjectSet": 123,
            "pointerFlowGraph": 207,
            "variableFlowGraph": 215,
            "objects": 43,
            "pointers": 299
        },
        "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal clearCredentialState(android.credentials.ClearCredentialStateRequest,android.credentials.IClearCredentialStateCallback,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 235,
            "pointerToObjectSet": 1128,
            "pointerFlowGraph": 1157,
            "variableFlowGraph": 1227,
            "objects": 271,
            "pointers": 1736
        },
        "<com.android.server.audio.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 91,
            "pointerToObjectSet": 352,
            "pointerFlowGraph": 544,
            "variableFlowGraph": 575,
            "objects": 107,
            "pointers": 762
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void createSearchSession(android.app.search.SearchContext,android.app.search.SearchSessionId,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 119,
            "pointerToObjectSet": 520,
            "pointerFlowGraph": 528,
            "variableFlowGraph": 558,
            "objects": 135,
            "pointers": 802
        },
        "<com.android.server.accounts.AccountManagerService: void startUpdateCredentialsSession(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 353,
            "pointerToObjectSet": 2146,
            "pointerFlowGraph": 2464,
            "variableFlowGraph": 2657,
            "objects": 658,
            "pointers": 3447
        },
        "<com.android.server.media.MediaSessionRecord$SessionStub: void sendEvent(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 6,
            "pointerToObjectSet": 21,
            "pointerFlowGraph": 24,
            "variableFlowGraph": 25,
            "objects": 7,
            "pointers": 39
        },
        "<com.android.server.wm.ActivityTaskManagerService: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 35,
            "pointerToObjectSet": 100,
            "pointerFlowGraph": 147,
            "variableFlowGraph": 151,
            "objects": 34,
            "pointers": 256
        },
        "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void showSession(android.os.Bundle,int,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 158,
            "pointerToObjectSet": 636,
            "pointerFlowGraph": 706,
            "variableFlowGraph": 756,
            "objects": 162,
            "pointers": 1154
        },
        "<com.android.server.musicrecognition.MusicRecognitionManagerPerUserService$MusicRecognitionServiceCallback: void onRecognitionSucceeded(android.media.MediaMetadata,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 12,
            "pointerToObjectSet": 31,
            "pointerFlowGraph": 30,
            "variableFlowGraph": 31,
            "objects": 13,
            "pointers": 55
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void sendAppPrivateCommand(android.os.IBinder,java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 76,
            "pointerToObjectSet": 257,
            "pointerFlowGraph": 257,
            "variableFlowGraph": 268,
            "objects": 64,
            "pointers": 435
        },
        "<com.android.server.audio.AudioService: void setDeviceVolume(android.media.VolumeInfo,android.media.AudioDeviceAttributes,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 215,
            "pointerToObjectSet": 1181,
            "pointerFlowGraph": 1417,
            "variableFlowGraph": 1591,
            "objects": 371,
            "pointers": 2178
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 47,
            "pointerToObjectSet": 164,
            "pointerFlowGraph": 141,
            "variableFlowGraph": 156,
            "objects": 53,
            "pointers": 259
        },
        "<com.android.server.media.MediaRouterService: void transferToRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 27,
            "pointerToObjectSet": 93,
            "pointerFlowGraph": 93,
            "variableFlowGraph": 97,
            "objects": 36,
            "pointers": 166
        },
        "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void sendAppLinkCommand(java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 59,
            "pointerToObjectSet": 235,
            "pointerFlowGraph": 251,
            "variableFlowGraph": 258,
            "objects": 48,
            "pointers": 384
        },
        "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 33,
            "pointerToObjectSet": 102,
            "pointerFlowGraph": 116,
            "variableFlowGraph": 121,
            "objects": 33,
            "pointers": 195
        },
        "<com.android.server.pm.UserManagerService: void setDefaultGuestRestrictions(android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 162,
            "pointerToObjectSet": 570,
            "pointerFlowGraph": 628,
            "variableFlowGraph": 681,
            "objects": 201,
            "pointers": 1042
        },
        "<com.android.server.audio.AudioService: int abandonAudioFocusForTest(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 87,
            "pointerToObjectSet": 331,
            "pointerFlowGraph": 518,
            "variableFlowGraph": 544,
            "objects": 100,
            "pointers": 718
        },
        "<com.android.server.location.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String,java.lang.String)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 25,
            "pointerToObjectSet": 84,
            "pointerFlowGraph": 88,
            "variableFlowGraph": 94,
            "objects": 34,
            "pointers": 146
        },
        "<com.android.server.pm.UserManagerService: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 47,
            "pointerToObjectSet": 117,
            "pointerFlowGraph": 126,
            "variableFlowGraph": 134,
            "objects": 43,
            "pointers": 230
        },
        "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void notifyInteraction(int,java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 89,
            "pointerToObjectSet": 333,
            "pointerFlowGraph": 368,
            "variableFlowGraph": 389,
            "objects": 109,
            "pointers": 576
        },
        "<com.android.server.notification.NotificationManagerService$11: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 665,
            "pointerToObjectSet": 3385,
            "pointerFlowGraph": 4558,
            "variableFlowGraph": 4834,
            "objects": 1003,
            "pointers": 6367
        },
        "<com.android.server.notification.NotificationManagerService$11: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 1137,
            "pointerToObjectSet": 7642,
            "pointerFlowGraph": 13967,
            "variableFlowGraph": 14828,
            "objects": 2060,
            "pointers": 17714
        },
        "<com.android.server.midi.MidiService: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 14,
            "pointerToObjectSet": 38,
            "pointerFlowGraph": 34,
            "variableFlowGraph": 38,
            "objects": 14,
            "pointers": 71
        },
        "<com.android.server.statusbar.StatusBarManagerService: void updateMediaTapToTransferReceiverDisplay(int,android.media.MediaRoute2Info,android.graphics.drawable.Icon,java.lang.CharSequence)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 4,
            "pointerToObjectSet": 13,
            "pointerFlowGraph": 21,
            "variableFlowGraph": 21,
            "objects": 6,
            "pointers": 36
        },
        "<com.android.server.appprediction.AppPredictionManagerService$PredictionManagerServiceStub: void createPredictionSession(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId,android.os.IBinder)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 131,
            "pointerToObjectSet": 569,
            "pointerFlowGraph": 570,
            "variableFlowGraph": 600,
            "objects": 145,
            "pointers": 878
        },
        "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 39,
            "pointerToObjectSet": 128,
            "pointerFlowGraph": 114,
            "variableFlowGraph": 132,
            "objects": 42,
            "pointers": 203
        },
        "<com.android.server.notification.NotificationManagerService$11: void applyEnqueuedAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 448,
            "pointerToObjectSet": 2391,
            "pointerFlowGraph": 3423,
            "variableFlowGraph": 3620,
            "objects": 656,
            "pointers": 4663
        },
        "<com.android.server.statusbar.StatusBarManagerService: void onNotificationFeedbackReceived(java.lang.String,android.os.Bundle)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 5,
            "pointerToObjectSet": 13,
            "pointerFlowGraph": 15,
            "variableFlowGraph": 15,
            "objects": 6,
            "pointers": 26
        },
        "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void notifyEvent(android.app.search.SearchSessionId,android.app.search.Query,android.app.search.SearchTargetEvent)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 99,
            "pointerToObjectSet": 428,
            "pointerFlowGraph": 431,
            "variableFlowGraph": 456,
            "objects": 119,
            "pointers": 663
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: boolean requestPinAppWidget(java.lang.String,android.content.ComponentName,android.os.Bundle,android.content.IntentSender)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 205,
            "pointerToObjectSet": 1027,
            "pointerFlowGraph": 1088,
            "variableFlowGraph": 1171,
            "objects": 312,
            "pointers": 1803
        },
        "<com.android.server.tv.TvInputManagerService$BinderService: void updateTvInputInfo(android.media.tv.TvInputInfo,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 86,
            "pointerToObjectSet": 270,
            "pointerFlowGraph": 269,
            "variableFlowGraph": 285,
            "objects": 72,
            "pointers": 475
        },
        "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 324,
            "pointerToObjectSet": 1754,
            "pointerFlowGraph": 1908,
            "variableFlowGraph": 2088,
            "objects": 513,
            "pointers": 3178
        },
        "<com.android.server.appwidget.AppWidgetServiceImpl: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>- ParcelMismatchInSystemServer": {
            "reachableMethods": 200,
            "pointerToObjectSet": 999,
            "pointerFlowGraph": 1114,
            "variableFlowGraph": 1183,
            "objects": 296,
            "pointers": 1814
        }
    },
    "maxMemoryUsage": 83246827640,
    "analyzers": [
        {
            "entry": "<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$SessionStub: void setPlaybackToLocal(android.media.AudioAttributes)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void crashApplicationWithTypeWithExtras(int,int,java.lang.String,int,java.lang.String,boolean,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: boolean canBeSpatialized(android.media.AudioAttributes,android.media.AudioFormat)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onAdRequest(android.media.tv.AdRequest)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: void finishSessionAsUser(android.accounts.IAccountManagerResponse,android.os.Bundle,boolean,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void requestCreateSessionWithRouter2(android.media.IMediaRouter2,int,long,android.media.RoutingSessionInfo,android.media.MediaRoute2Info,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.notification.NotificationManagerService$11: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void sendTvInputNotifyIntent(android.content.Intent,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.soundtrigger.SoundTriggerService$SoundTriggerSessionStub: int startRecognitionForService(android.os.ParcelUuid,android.os.Bundle,android.content.ComponentName,android.hardware.soundtrigger.SoundTrigger$RecognitionConfig)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: boolean startDreamActivity(android.content.Intent)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.compat.PlatformCompat: void reportChange(long,android.content.pm.ApplicationInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int getFocusRampTimeMs(int,android.media.AudioAttributes)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: android.app.PendingIntent getShortcutIntent(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,android.os.UserHandle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.Session: int relayout(android.view.IWindow,android.view.WindowManager$LayoutParams,int,int,int,int,int,int,android.window.ClientWindowFrames,android.util.MergedConfiguration,android.view.SurfaceControl,android.view.InsetsState,android.view.InsetsSourceControl$Array,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: void playerAttributes(int,android.media.AudioAttributes)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.Session: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.notification.NotificationManagerService$11: void createConversationNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appwidget.AppWidgetServiceImpl: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.devicepolicy.DevicePolicyManagerService: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.location.LocationManagerService: void sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.notification.NotificationManagerService$11: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void selectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,long,java.lang.String,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.clipboard.ClipboardService$ClipboardImpl: void setPrimaryClip(android.content.ClipData,java.lang.String,java.lang.String,int,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void tune(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void sendAppLinkCommand(java.lang.String,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.devicepolicy.DevicePolicyManagerService: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.app.IApplicationThread,android.os.IBinder,android.content.Intent,android.app.IServiceConnection,long,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityClientController: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: boolean startShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: void setDeviceVolume(android.media.VolumeInfo,android.media.AudioDeviceAttributes,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean showSessionForActiveService(android.os.Bundle,int,java.lang.String,com.android.internal.app.IVoiceInteractionSessionShowCallback,android.os.IBinder)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.compat.PlatformCompat: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: long getFadeOutDurationOnFocusLossMillis(android.media.AudioAttributes)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void notifyError(android.os.IBinder,java.lang.String,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int abandonAudioFocusForTest(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: java.util.List getDevicesForAttributesUnprotected(android.media.AudioAttributes)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: void startUpdateCredentialsSession(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void setUiHints(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.security.AttestationVerificationManagerService$1: void verifyToken(android.security.attestationverification.VerificationToken,android.os.ParcelDuration,com.android.internal.infra.AndroidFuture)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void notifyTvMessage(android.os.IBinder,int,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.location.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.input.InputManagerService: void setKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean,boolean,boolean,android.media.projection.IMediaProjection)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.devicepolicy.DevicePolicyManagerService: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void transferToRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityClientController: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.WindowManagerService: void addWindowToken(android.os.IBinder,int,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void transferToRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void onPrintJobQueued(android.print.PrintJobInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.smartspace.SmartspaceManagerService$SmartspaceManagerStub: void createSmartspaceSession(android.app.smartspace.SmartspaceConfig,android.app.smartspace.SmartspaceSessionId,android.os.IBinder)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.om.OverlayManagerService$1: void commit(android.content.om.OverlayManagerTransaction)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void notifyTvMessage(android.os.IBinder,int,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.devicepolicy.DevicePolicyManagerService: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,boolean,java.lang.String,java.lang.String,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executeCreateCredential(android.credentials.CreateCredentialRequest,android.credentials.ICreateCredentialCallback,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal clearCredentialState(android.credentials.ClearCredentialStateRequest,android.credentials.IClearCredentialStateCallback,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.inputmethod.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.inputmethod.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.inputmethod.IRemoteInputConnection,com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,int,int,android.window.ImeOnBackInvokedDispatcher)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startActivityFromRecents(int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$SessionCallback: void onSessionEvent(java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: void moveTaskToFront(android.app.IApplicationThread,java.lang.String,int,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$SessionCallback: void onTvMessage(int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.MmsServiceBroker$BinderService: void sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent,long,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void notifyInteraction(int,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int bindServiceInstance(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,long,java.lang.String,java.lang.String,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void selectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaperWithFeature(java.lang.String,java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int,boolean)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void provideContextImage(int,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void moveTaskToFront(android.app.IApplicationThread,java.lang.String,int,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$SessionStub: void sendEvent(java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.backup.BackupManagerService: void updateTransportAttributesForUser(int,android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void performDirectAction(android.os.IBinder,java.lang.String,android.os.Bundle,int,android.os.IBinder,android.os.RemoteCallback,android.os.RemoteCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int broadcastIntentWithFeature(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],java.lang.String[],java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.content.ContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.location.LocationManagerService: void injectLocation(android.location.Location)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.permission.PermissionManagerService: boolean addPermission(android.content.pm.PermissionInfo,boolean)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.timezonedetector.TimeZoneDetectorService: boolean updateConfiguration(android.app.time.TimeZoneConfiguration)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.location.provider.proxy.ProxyLocationProvider$Proxy: void onReportLocation(android.location.Location)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityClientController: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.UserManagerService: void setDefaultGuestRestrictions(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityClientController: boolean convertToTranslucent(android.os.IBinder,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void suggestContentSelections(int,android.app.contentsuggestions.SelectionsRequest,android.app.contentsuggestions.ISelectionsCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void unbindBackupAgent(android.content.pm.ApplicationInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int scheduleAsPackage(java.lang.String,android.app.job.JobInfo,java.lang.String,int,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void addInstrumentationResults(android.app.IApplicationThread,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionService$SessionManagerImpl: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: void addOnDevicesForAttributesChangedListener(android.media.AudioAttributes,android.media.IDevicesForAttributesCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appprediction.AppPredictionManagerService$PredictionManagerServiceStub: void createPredictionSession(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId,android.os.IBinder)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void resumeRecording(android.os.IBinder,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.statusbar.StatusBarManagerService: void updateMediaTapToTransferReceiverDisplay(int,android.media.MediaRoute2Info,android.graphics.drawable.Icon,java.lang.CharSequence)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.textservices.TextServicesManagerService: void getSpellCheckerService(int,java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.job.JobServiceContext$JobCallback: void setNotification(int,int,android.app.Notification,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: boolean requestAutofillData(android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetOptions(java.lang.String,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.timedetector.TimeDetectorService: boolean updateConfiguration(android.app.time.TimeConfiguration)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.print.RemotePrintSpooler$PrintSpoolerClient: void onPrintJobStateChanged(android.print.PrintJobInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void classifyContentSelections(int,android.app.contentsuggestions.ClassificationsRequest,android.app.contentsuggestions.IClassificationsCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$SessionStub: void setExtras(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.notification.NotificationManagerService$11: void applyAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: void startAddAccountSession(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int enqueue(java.lang.String,android.app.job.JobInfo,android.app.job.JobWorkItem)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startActivityFromGameSession(android.app.IApplicationThread,java.lang.String,java.lang.String,int,int,android.content.Intent,int,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$BinderService: void createBiInteractiveApp(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHardwareInput(int,android.media.tv.TvInputInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.UserManagerService: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUserByIntent(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,int,android.os.IBinder,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.compat.PlatformCompat: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int startActivityWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.AppTaskImpl: int startActivity(android.os.IBinder,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void deselectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startVoiceActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.statusbar.StatusBarManagerService: void updateMediaTapToTransferSenderDisplay(int,android.media.MediaRoute2Info,com.android.internal.statusbar.IUndoMediaTransferCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.content.ContentService: void putCache(java.lang.String,android.net.Uri,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityClientController: boolean navigateUpTo(android.os.IBinder,android.content.Intent,java.lang.String,int,android.content.Intent)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.voiceinteraction.VoiceInteractionManagerService$3: void onSetUiHints(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.security.AttestationVerificationManagerService$1: void verifyAttestation(android.security.attestationverification.AttestationProfile,int,android.os.Bundle,byte[],com.android.internal.infra.AndroidFuture)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.job.JobSchedulerService$JobSchedulerStub: int schedule(java.lang.String,android.app.job.JobInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackStateEvent(java.lang.String,android.media.metrics.PlaybackStateEvent,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executeGetCredential(android.credentials.GetCredentialRequest,android.credentials.IGetCredentialCallback,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.content.ContentService: void cancelRequest(android.content.SyncRequest)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.content.ContentService: void sync(android.content.SyncRequest,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,int,boolean,android.os.IBinder,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int startVoiceActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wallpaper.WallpaperManagerService: void notifyWakingUp(int,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.musicrecognition.MusicRecognitionManagerPerUserService$MusicRecognitionServiceCallback: void onRecognitionSucceeded(android.media.MediaMetadata,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.Session: android.os.IBinder performDrag(android.view.IWindow,int,android.view.SurfaceControl,int,float,float,float,float,android.content.ClipData)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void sendAppPrivateCommand(android.os.IBinder,java.lang.String,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.statusbar.StatusBarManagerService: void onNotificationActionClick(java.lang.String,int,android.app.Notification$Action,com.android.internal.statusbar.NotificationVisibility,boolean)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromSearch(java.lang.String,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: boolean isActivityStartAllowedOnDisplay(int,android.content.Intent,java.lang.String,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startActivities(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.contentsuggestions.ContentSuggestionsManagerService$ContentSuggestionsManagerStub: void provideContextBitmap(int,android.graphics.Bitmap,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.content.ContentService: void syncAsUser(android.content.SyncRequest,int,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.job.JobServiceContext$JobCallback: void updateTransferredNetworkBytes(int,android.app.job.JobWorkItem,long,long)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$SessionStub: void setPlaybackState(android.media.session.PlaybackState)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportNetworkEvent(java.lang.String,android.media.metrics.NetworkEvent,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportTrackChangeEvent(java.lang.String,android.media.metrics.TrackChangeEvent,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.BinaryTransparencyService$BinaryTransparencyServiceImpl: java.util.List collectAllUpdatedPreloadInfo(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.content.ContentService: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appwidget.AppWidgetServiceImpl: boolean requestPinAppWidget(java.lang.String,android.content.ComponentName,android.os.Bundle,android.content.IntentSender)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: boolean showSessionFromSession(android.os.IBinder,android.os.Bundle,int,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.clipboard.ClipboardService$ClipboardImpl: void setPrimaryClipAsPackage(android.content.ClipData,java.lang.String,java.lang.String,int,int,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: boolean sendFocusLoss(android.media.AudioFocusInfo,android.media.audiopolicy.IAudioPolicyCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appwidget.AppWidgetServiceImpl: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appop.AppOpsService: void setUserRestrictions(android.os.Bundle,android.os.IBinder,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackErrorEvent(java.lang.String,android.media.metrics.PlaybackErrorEvent,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void showAppDetailsAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$ControllerStub: void sendCommand(java.lang.String,java.lang.String,android.os.Bundle,android.os.ResultReceiver)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void setUserData(android.service.autofill.UserData)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onCommandRequest(java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startAssistantActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appwidget.AppWidgetServiceImpl: boolean bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.app.IApplicationThread,android.os.IBinder,android.app.IServiceConnection,long)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: void showSession(android.os.Bundle,int,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$SessionStub: void setMetadata(android.media.MediaMetadata,long,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wallpaper.WallpaperManagerService: void notifyGoingToSleep(int,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.input.InputManagerService: java.lang.String getKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$ControllerStub: void playFromUri(java.lang.String,android.net.Uri,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRoute2ProviderServiceProxy$ServiceCallbackStub: void notifySessionReleased(android.media.RoutingSessionInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.statusbar.StatusBarManagerService: void onNotificationFeedbackReceived(java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.notification.NotificationManagerService$11: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.autofill.AutofillManagerService$AutoFillManagerServiceStub: void setAuthenticationResult(android.os.Bundle,int,int,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int setPreferredMixerAttributes(android.media.AudioAttributes,int,android.media.AudioMixerAttributes)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int startActivityAsUserWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.search.SearchManagerService: void launchAssist(int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.metrics.MediaMetricsManagerService$BinderService: void reportPlaybackMetrics(java.lang.String,android.media.metrics.PlaybackMetrics,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.notification.NotificationManagerService$11: boolean matchesCallFilter(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.midi.MidiService: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRoute2ProviderServiceProxy$ServiceCallbackStub: void notifySessionCreated(long,android.media.RoutingSessionInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int,java.lang.String,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void startRecording(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.Session: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int requestAudioFocusForTest(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,int,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void requestAd(android.os.IBinder,android.media.tv.AdRequest,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.autofill.RemoteAugmentedAutofillService$1$1: void onSuccess(java.util.List,android.os.Bundle,boolean)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.notification.NotificationManagerService$11: void applyEnqueuedAdjustmentFromAssistant(android.service.notification.INotificationListener,android.service.notification.Adjustment)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onTimeShiftCommandRequest(java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void query(android.app.search.SearchSessionId,android.app.search.Query,android.app.search.ISearchCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: android.media.VolumeInfo getDeviceVolume(android.media.VolumeInfo,android.media.AudioDeviceAttributes,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: void startRecentsActivity(android.content.Intent,long,android.view.IRecentsAnimationRunner)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$ControllerStub: void sendCustomAction(java.lang.String,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityClientController: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.BinaryTransparencyService$BinaryTransparencyServiceImpl: java.util.List collectAllSilentInstalledMbaInfo(android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void pauseRecording(android.os.IBinder,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: boolean requestAssistContextExtras(int,android.app.IAssistDataReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void notifyEvent(android.app.search.SearchSessionId,android.app.search.Query,android.app.search.SearchTargetEvent)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub: int startAssistantActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.pm.LauncherAppsService$LauncherAppsImpl: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: android.app.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.accounts.AccountManagerService: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.MmsServiceBroker$BinderService: void downloadMessage(int,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent,long,java.lang.String)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onRequestScheduleRecording2(java.lang.String,java.lang.String,android.net.Uri,long,long,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.job.JobServiceContext$JobCallback: void updateEstimatedNetworkBytes(int,android.app.job.JobWorkItem,long,long)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$ServiceCallback: void addHdmiInput(int,android.media.tv.TvInputInfo)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.audio.AudioService: int clearPreferredMixerAttributes(android.media.AudioAttributes,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void requestCreateSessionWithManager(android.media.IMediaRouter2Manager,int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.appwidget.AppWidgetServiceImpl: boolean bindAppWidgetId(java.lang.String,int,int,android.content.ComponentName,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayoutListForInputDevice(android.hardware.input.InputDeviceIdentifier,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: int startActivityFromRecents(int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.WindowManagerService: android.content.res.Configuration attachWindowContextToDisplayArea(android.os.IBinder,int,int,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.searchui.SearchUiManagerService$SearchUiManagerStub: void createSearchSession(android.app.search.SearchContext,android.app.search.SearchSessionId,android.os.IBinder)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaSessionRecord$ControllerStub: void prepareFromMediaId(java.lang.String,java.lang.String,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.wm.ActivityTaskManagerService: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,boolean,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.content.ContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.media.MediaRouterService: void deselectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.interactive.TvInteractiveAppManagerService$SessionCallback: void onRequestScheduleRecording(java.lang.String,java.lang.String,android.net.Uri,android.net.Uri,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.am.ActivityManagerService: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.tv.TvInputManagerService$BinderService: void updateTvInputInfo(android.media.tv.TvInputInfo,int)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.midi.MidiService: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        },
        {
            "entry": "<com.android.server.MmsServiceBroker$BinderService: void sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>",
            "rule": "ParcelMismatchInSystemServer",
            "sourceSize": 291,
            "sinkSize": 298,
            "depth": 16,
            "sources": [
                "<com.android.server.credentials.CredentialManagerService$CredentialManagerServiceStub: android.os.ICancellationSignal executePrepareGetCredential(android.credentials.GetCredentialRequest,android.credentials.IPrepareGetCredentialCallback,android.credentials.IGetCredentialCallback,java.lang.String)>->@parameter0",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter4",
                "<com.android.server.am.ActivityManagerService: int sendIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>->@parameter8"
            ],
            "sinks": [
                "<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>->$r4",
                "<com.android.server.policy.PhoneWindowManager: boolean goHome()>->$r9_2",
                "<com.android.server.accessibility.AbstractAccessibilityServiceConnection: void startInputInternal(com.android.internal.inputmethod.IRemoteAccessibilityInputConnection,android.view.inputmethod.EditorInfo,boolean)>->$z0"
            ]
        }
    ]
}